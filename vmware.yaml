---
# Source: sthings-cluster/templates/downstream-cluster-config.yaml
apiVersion: provisioning.cattle.io/v1
kind: Cluster
metadata:
  name: ankit2
  namespace: fleet-default
  annotations:
    field.cattle.io/description: ankit2 cluster
    created: helm
  labels:
    cluster: ankit2
spec:
  kubernetesVersion: v1.28.8+rke2r1
  localClusterAuthEndpoint:
    caCerts: ''
    enabled: false
    fqdn: ''
  cloudCredentialSecretName: cattle-global-data:labul-vsphere
  defaultPodSecurityAdmissionConfigurationTemplateName: ''
  defaultPodSecurityPolicyTemplateName: ''
  rkeConfig:
    chartValues:
      rke2-cilium: {}
    etcd:
      disableSnapshots: false
      s3:
#        bucket: string
#        cloudCredentialName: string
#        endpoint: string
#        endpointCA: string
#        folder: string
#        region: string
#        skipSSLVerify: boolean
      snapshotRetention: 5
      snapshotScheduleCron: 0 */5 * * *
    machineGlobalConfig:
      cni: cilium
      disable:
        - rke2-ingress-nginx
      disable-kube-proxy: false
      etcd-expose-metrics: false
      profile: null
    machineSelectorConfig:
      - config:
          protect-kernel-defaults: false
            #cloud-provider-name: vsphere
    machinePools:
      - name: ankit2
        controlPlaneRole: true
        etcdRole: true
        workerRole: true
        quantity: 1
        unhealthyNodeTimeout: 0m
        drainBeforeDelete: true
        machineOS: linux
        labels: {}
        machineConfigRef:
          kind: VmwarevsphereConfig
          name: ankit2
        paused: false
    registries:
      configs:
        {}
      mirrors:
        {}
    upgradeStrategy:
      controlPlaneConcurrency: 10%
      controlPlaneDrainOptions:
        timeout: 0
        deleteEmptyDirData: true
        disableEviction: false
        enabled: false
        force: false
        gracePeriod: -1
        ignoreDaemonSets: true
        skipWaitForDeleteTimeoutSeconds: 0
      workerConcurrency: 10%
      workerDrainOptions:
        timeout: 0
        deleteEmptyDirData: true
        disableEviction: false
        enabled: false
        force: false
        gracePeriod: -1
        ignoreDaemonSets: true
        skipWaitForDeleteTimeoutSeconds: 0
---
# Source: sthings-cluster/templates/vsphere-machine-pool-config.yaml
apiVersion: rke-machine-config.cattle.io/v1
kind: VmwarevsphereConfig
metadata:
  name: ankit2
  namespace: fleet-default
cpuCount: "6"
diskSize: "40000"
memorySize: "8192"
datacenter: /LabUL
datastore: /LabUL/datastore/ESX05-Local
boot2dockerUrl: null
cfgparam:
  - disk.enableUUID=TRUE
cloneFrom: /LabUL/vm/stuttgart-things/vm-templates/sthings-u24-k8s
cloudinit: null
common:
  labels: null
  taints: []
contentLibrary: null
creationType: template
customAttribute: []
datastoreCluster: null
folder: /LabUL/vm/stuttgart-things/rancher-things
gracefulShutdownTimeout: "0"
hostsystem: null
network:
  - /LabUL/network/LAB-10.31.103
os: linux
password: null
pool: /LabUL/host/Cluster-V6.7/Resources
sshPassword: tcuser
sshPort: "22"
sshUser: docker
sshUserGroup: staff
tag: []
cloudConfig:
  |-
    #cloud-config
    package_update: true
    package_upgrade: true
    packages:
      - git
      - curl
      - wget
      - git
    resize_rootfs: true
    growpart:
      mode: auto
      devices: ['/']
      ignore_growroot_disabled: false
    ansible:
      package_name: ansible-core
      install_method: distro
      pull:
        url: "https://github.com/stuttgart-things/stuttgart-things.git"
        playbook_name: ansible/playbooks/base-os-cloudinit.yaml
      run_ansible:
        timeout: 5
      galaxy:
        actions:
          - ["ansible-galaxy", "collection", "install", "community.crypto"]
          - ["ansible-galaxy", "collection", "install", "community.general"]
          - ["ansible-galaxy", "collection", "install", "ansible.posix"]
          - ["ansible-galaxy", "install", "git+https://github.com/stuttgart-things/manage-filesystem.git"]
          - ["ansible-galaxy", "install", "git+https://github.com/stuttgart-things/install-configure-vault.git"]
          - ["ansible-galaxy", "install", "git+https://github.com/stuttgart-things/install-requirements.git"]
          - ["ansible-galaxy", "install", "git+https://github.com/stuttgart-things/download-install-binary.git"]
          - ["ansible-galaxy", "install", " git+https://github.com/stuttgart-things/create-os-user.git"]
          - ["ansible-galaxy", "install", " git+https://github.com/stuttgart-things/create-send-webhook.git"]
    runcmd:
      - wget -O /usr/local/share/ca-certificates/labda-vsphere-ca.crt https://vault-vsphere.tiab.labda.sva.de:8200/v1/pki/ca/pem --no-check-certificate
      - wget -O /usr/local/share/ca-certificates/labul-vsphere-ca.crt https://vault-vsphere.labul.sva.de:8200/v1/pki/ca/pem --no-check-certificate
      - wget -O /usr/local/share/ca-certificates/labul-ca.crt https://vault.labul.sva.de:8200/v1/pki/ca/pem --no-check-certificate
      - wget -O /usr/local/share/ca-certificates/labda-ca.crt https://vault.tiab.labda.sva.de:8200/v1/pki/ca/pem --no-check-certificate
      - update-ca-certificates
username: null
vappIpallocationpolicy: null
vappIpprotocol: null
vappProperty: []
vappTransport: null
vcenter: null
vcenterPort: "443"
