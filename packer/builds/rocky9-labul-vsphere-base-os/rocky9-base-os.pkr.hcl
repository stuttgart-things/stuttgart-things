packer {
  required_version = ">= 1.10.2"
  required_plugins {
    vmware = {
      version = ">= 1.2.7"
      source  = "github.com/hashicorp/vsphere"
    }
    ansible = {
      source  = "github.com/hashicorp/ansible"
      version = ">= 1.1.1"
    }
  }

}

source "vsphere-iso" "autogenerated_1" {
  CPUs                 = 8
  RAM                  = 8192
  RAM_reserve_all      = true
  boot_command         = ["<up><wait5><tab> inst.text inst.repo=cdrom:sr0 inst.ks=cdrom:sr1:/user-data<enter><wait>"]
  boot_order           = "disk,cdrom"
  boot_wait            = "5s"
  cd_files             = ["./user-data"]
  cd_label             = "cidata"
  cluster              = "/LabUL/host/Cluster-V6.5"
  convert_to_template  = "true"
  datastore            = "/LabUL/datastore/UL-ESX-SAS-01"
  disk_controller_type = ["pvscsi"]
  folder               = "/stuttgart-things/packer"
  guest_os_type        = "centos7_64Guest"
  host                 = "/LabUL/host/Cluster-V6.5/10.31.101.41"
  insecure_connection  = "true"
  ip_wait_timeout      = "30m"
  iso_checksum         = "eef8d26018f4fcc0dc101c468f65cbf588f2184900c556f243802e9698e56729"
  iso_urls             = ["https://download.rockylinux.org/pub/rocky/9/isos/x86_64/Rocky-9.3-x86_64-minimal.iso"]
  network_adapters {
    network      = "/LabUL/network/LAB-10.31.102"
    network_card = "vmxnet3"
  }
  notes                = "stuttgart-things/rocky9\n\nBuild Date: ${local.packerstarttime} w/ packer\nOS: rocky9\nISO: https://download.rockylinux.org/pub/rocky/9/isos/x86_64/Rocky-9.3-x86_64-minimal.iso\nProvisioning: base-os\n\n/Patrick Hermann (patrick.hermann@sva.de)\n/Christian Mueller (christian.mueller@sva.de)\n"
  password               = "${var.password}"
  ssh_handshake_attempts = "900"
  ssh_password           = "ch0coLate"
  ssh_timeout            = "30m"
  ssh_username           = "root"
  storage {
    disk_size             = 16384
    disk_thin_provisioned = true
  }
  username       = "${var.username}"
  vcenter_server = "10.31.101.51"
  vm_name        = "${ var.name }"
}

build {
  sources = ["source.vsphere-iso.autogenerated_1"]

  provisioner "shell" {
    inline = ["dnf update -y; dnf install -y python3-dnf cloud-utils-growpart; dnf install -y gdisk python3; shred -u /etc/ssh/*_key /etc/ssh/*_key.pub; rm -f /var/run/utmp; >/var/log/lastlog; >/var/log/wtmp; >/var/log/btmp; rm -rf /tmp/* /var/tmp/*; unset HISTFILE; rm -rf /home/*/.*history /root/.*history; rm -f /root/*ks; passwd -d root; passwd -l root; rm -f /etc/resolv.conf; ln -sf /run/NetworkManager/resolv.conf /etc/resolv.conf; echo manage_PasswordAuthentication ;sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config; sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/g' /etc/ssh/sshd_config"]
  }

  provisioner "ansible" {
    ansible_env_vars       = ["ANSIBLE_REMOTE_TEMP=/tmp", "ANSIBLE_HOST_KEY_CHECKING=False", "ANSIBLE_SSH_ARGS=-oForwardAgent=yes -oControlMaster=auto -oControlPersist=60s -oHostKeyAlgorithms=+ssh-rsa   -oPubkeyAcceptedKeyTypes=+ssh-rsa", "ANSIBLE_NOCOLOR=True"]
    extra_arguments        = ["--scp-extra-args", "'-O'"]
    keep_inventory_file    = "true"
    playbook_file          = "./base-os.yaml"
    user                   = "root"
  }
}

locals {
  packerstarttime = formatdate("YYYYMMDD", timestamp())
}

variable "password" {
  type = string
}

variable "username" {
  type = string
}