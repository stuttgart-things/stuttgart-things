packer {
  required_version = ">= 1.10.2"
  required_plugins {
    vmware = {
      source  = "github.com/hashicorp/vsphere"
      version = ">= 1.2.7"
    }
    ansible = {
      source  = "github.com/hashicorp/ansible"
      version = ">= 1.1.1"
    }
  }
}

source "vsphere-iso" "autogenerated_1" {
  CPUs                 = 8
  RAM                  = 8192
  RAM_reserve_all      = true
  boot_command         = ["<esc><esc><esc><esc>e<wait>", "linux /casper/vmlinuz autoinstall quiet ---<enter><wait>", "initrd /casper/initrd<enter><wait>", "boot<enter>", "<enter><f10><wait720>"]
  boot_order           = "disk,cdrom"
  ip_settle_timeout    = "20s"
  boot_wait            = "5s"
  cd_files             = ["./user-data", "./meta-data"]
  cd_label             = "cidata"
  cluster              = "/LabUL/host/Cluster-V6.5"
  convert_to_template  = "true"
  datastore            = "/LabUL/datastore/UL-ESX-SAS-01"
  disk_controller_type = ["pvscsi"]
  folder               = "/stuttgart-things/packer"
  guest_os_type        = "ubuntu64Guest"
  host                 = "/LabUL/host/Cluster-V6.5/10.31.101.41"
  insecure_connection  = "true"
  ip_wait_timeout      = "40m"
  iso_checksum         = "c7cda48494a6d7d9665964388a3fc9c824b3bef0c9ea3818a1be982bc80d346b"
  iso_urls             = ["https://releases.ubuntu.com/lunar/ubuntu-23.04-live-server-amd64.iso"]
  network_adapters {
    network      = "/LabUL/network/LAB-10.31.102"
    network_card = "vmxnet3"
  }
  notes                  = "stuttgart-things/ubuntu23\n\nBuild Date: ${local.packerstarttime} w/ packer\nOS: ubuntu23\nISO: https://releases.ubuntu.com/lunar/ubuntu-23.04-live-server-amd64.iso\nProvisioning: rke2-node\n\n/Patrick Hermann (patrick.hermann@sva.de)\n/Christian Mueller (christian.mueller@sva.de)\n"
  password               = "${ var.password }"
  ssh_handshake_attempts = "900"
  ssh_password           = "ubuntu"
  ssh_timeout            = "30m"
  ssh_username           = "ubuntu"
  storage {
    disk_size             = 15360
    disk_thin_provisioned = true
  }
  username       = "${ var.username }"
  vcenter_server = "10.31.101.51"
  vm_name        = "${ var.name }"
}

build {
  sources = ["source.vsphere-iso.autogenerated_1"]

  provisioner "shell" {
    inline = ["sudo apt-get -y update; sudo apt-get -y upgrade; sudo apt-get -y install python3; sudo apt-get autoremove --purge -y && sudo apt-get autoclean -y && sudo apt-get clean -y; sudo truncate -s 0 /etc/machine-id && echo 'machine-id was reset successfully'; sudo systemctl stop systemd-resolved; sudo sed -i 's/#DNSStubListener=yes/DNSStubListener=no/g' /etc/systemd/resolved.conf; sudo rm /etc/resolv.conf; sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf; sudo systemctl start systemd-resolved"]
  }

  provisioner "ansible" {
    ansible_env_vars       = ["ANSIBLE_REMOTE_TEMP=/tmp", "ANSIBLE_HOST_KEY_CHECKING=False", "ANSIBLE_SSH_ARGS=-oForwardAgent=yes -oControlMaster=auto -oControlPersist=60s -oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa", "ANSIBLE_NOCOLOR=True"]
    extra_arguments        = ["-e ansible_ssh_pass=ubuntu -vv"]
    keep_inventory_file    = "true"
    playbook_file          = "./rke2-node.yaml"
    galaxy_file            = "./requirements.yaml"
    galaxy_force_install   = "true"
    use_proxy              = "false"
    user                   = "ubuntu"
  }
}

locals {
  packerstarttime = formatdate("YYYYMMDD", timestamp())
}

variable "password" {
  type = string
}

variable "username" {
  type = string
}

variable "name" {
  type = string
}
