packer {
  required_version = ">= 1.10.3"
  required_plugins {
    proxmox = {
      source  = "github.com/hashicorp/proxmox"
      version = ">= 1.1.7"
    }
    ansible = {
      source  = "github.com/hashicorp/ansible"
      version = ">= 1.1.1"
    }
  }
}

source "proxmox-iso" "autogenerated_1" {
  boot                    = "order=virtio0;ide2;net0"
  boot_command            = ["<esc><esc><esc><esc>e<wait>", "linux /casper/vmlinuz autoinstall ds=nocloud quiet ---<enter><wait>", "initrd /casper/initrd<enter><wait>", "boot<enter>", "<enter><f10><wait>"]
  boot_wait               = "3s"
  cloud_init              = "false"
  cloud_init_storage_pool = "v3700"
  cores                   = 8
  cpu_type                = "host"
  disks {
    disk_size         = "16G"
    format            = "raw"
    storage_pool      = "v3700"
    type              = "virtio"
  }

  additional_iso_files {
    cd_files = ["./meta-data", "./user-data"]
    cd_label = "cidata"
    unmount = true
    iso_storage_pool = "local"
  }

  insecure_skip_tls_verify = true
  iso_url                  = "https://releases.ubuntu.com/noble/ubuntu-24.04-live-server-amd64.iso"
  iso_checksum             = "8762f7e74e4d64d72fceb5f70682e6b069932deedb4949c6975d0f0fe0a91be3"
  iso_storage_pool         = "datastore"
  memory                   = 8192

  network_adapters {
    bridge = "vmbr103"
    model  = "virtio"
  }

  node                 = "sthings-pve1"
  os                   = "l26"
  username             = var.username
  password             = var.password
  pool                 = "packer"
  proxmox_url          = "https://sthings-pve1.labul.sva.de:8006/api2/json"
  ssh_username         = "ubuntu"
  ssh_password         = "ubuntu"
  ssh_timeout          = "20m"
  template_description = "Packer VM Template\n---\nSpecs  \nOS: ubuntu24  \nBuild Date: ${local.packerstarttime}\n---\nProvisioning \nMaintainer  \nPatrick Hermann patrick.hermann@sva.de \nChristian Mueller christian.mueller@sva.de \nMartin Wolf martin.wolf@sva.de\n---"
  template_name        = "${ var.name }"
  unmount_iso          = true
}

build {
  sources = ["source.proxmox-iso.autogenerated_1"]

  provisioner "shell" {
    inline = ["sudo rm -rf /var/cache/apt/*.bin; sudo apt-get -y update; sudo apt-get -y upgrade; sudo apt-get -y install python3 cloud-init; sudo apt-get autoremove --purge -y && sudo apt-get autoclean -y && sudo apt-get clean -y; sudo rm -rf /var/lib/cloud/seed/nocloud.net; echo 'datasource_list: [ NoCloud, ConfigDrive ]' | sudo tee -a /etc/cloud/cloud.cfg.d/99_pve.cfg > /dev/null; sudo truncate -s 0 /etc/machine-id && echo 'machine-id was reset successfully'; sudo systemctl stop systemd-resolved; sudo sed -i 's/#DNSStubListener=yes/DNSStubListener=no/g' /etc/systemd/resolved.conf; sudo rm /etc/resolv.conf; sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf; sudo systemctl start systemd-resolved"]
  }

  provisioner "ansible" {
    ansible_env_vars       = ["ANSIBLE_REMOTE_TEMP=/tmp", "ANSIBLE_HOST_KEY_CHECKING=False", "ANSIBLE_SSH_ARGS=-oForwardAgent=yes -oControlMaster=auto -oControlPersist=60s -oHostKeyAlgorithms=+ssh-rsa   -oPubkeyAcceptedKeyTypes=+ssh-rsa", "ANSIBLE_NOCOLOR=True"]
    extra_arguments        = ["--scp-extra-args", "'-O'"]
    keep_inventory_file    = "true"
    playbook_file          = "./base-os.yaml"
    user                   = "ubuntu"
  }

}

locals {
  packerstarttime = formatdate("YYYY-MM-DD", timestamp())
  vmdate = formatdate("YYMM", timestamp())
}

variable "password" {
  type = string
}

variable "username" {
  type = string
}

variable "name" {
  type = string
}
