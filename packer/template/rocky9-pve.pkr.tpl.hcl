packer {
  required_version = ">= [[ .rocky9PackerMinVersion ]]"
  required_plugins {
    proxmox = {
      source  = "[[ .pveProvider ]]"
      version = ">= [[ .pveProviderVersion ]]"
    }
    ansible = {
      source  = "github.com/hashicorp/ansible"
      version = "~> 1"
    }
  }
}

source "proxmox-iso" "autogenerated_1" {
  boot                    = "order=virtio0;ide2;net0"
  boot_command            = ["<tab> inst.text inst.ks=cdrom:/user-data<enter><wait>"]
  boot_wait               = "5s"
  cloud_init              = "false"
  cloud_init_storage_pool = "[[ .storage_pool ]]"
  cores                   = [[ .cpu ]]
  cpu_type                = "host"

  disks {
    disk_size         = "[[ .diskSize ]]G"
    format            = "raw"
    storage_pool      = "[[ .storage_pool ]]"
    type              = "virtio"
  }

  additional_iso_files {
    cd_files = ["[[ .packerConfigMountPath ]]/meta-data", "[[ .packerConfigMountPath ]]/user-data"]
    cd_label = "cidata"
    unmount = true
    iso_storage_pool = "local"
  }

  insecure_skip_tls_verify = true
  iso_checksum             = "[[ .rocky9IsoChecksum ]]"
  iso_storage_pool         = "[[ .isoStoragePool ]]"
  iso_url                  = "[[ .rocky9IsoUrl ]]"
  memory                   = [[ .ram ]]

  network_adapters {
    bridge = "[[ .networkAdapdater ]]"
    model  = "virtio"
  }

  node                 = "sthings-pve1"
  os                   = "l26"
  password             = "${var.password}"
  pool                 = "packer"
  proxmox_url          = "https://sthings-pve1.labul.sva.de:8006/api2/json"
  ssh_password         = "[[ .ssh_password_redhat ]]"
  ssh_timeout          = "40m"
  ssh_username         = "[[ .ssh_username_redhat ]]"
  template_description = "Packer VM Template\n---\nSpecs  \nOS: rocky9  \nBuild Date: ${local.packerstarttime}\n---\nProvisioning  \nAnsible Play: plays/packer-provisioning/[[ .provisioning ]].yaml  \nUser: packer  \nPassword: Pac7er\n---\nMaintainer  \nPatrick Hermann patrick.hermann@sva.de  \nMarcel Zapf marcel.zapf@sva.de  \nChristian Mueller christian.mueller@sva.de  \nMartin Wolf martin.wolf@sva.de\n---"
  template_name        = "[[ .os ]]-[[ .provisioning ]]"
  unmount_iso          = true
  username             = "${var.username}"
}

build {
  sources = ["source.proxmox-iso.autogenerated_1"]

  provisioner "shell" {
    inline = ["dnf update -y; dnf install -y python3-dnf cloud-utils-growpart; dnf install -y gdisk python3; shred -u /etc/ssh/*_key /etc/ssh/*_key.pub; rm -f /var/run/utmp; >/var/log/lastlog; >/var/log/wtmp; >/var/log/btmp; rm -rf /tmp/* /var/tmp/*; unset HISTFILE; rm -rf /home/*/.*history /root/.*history; rm -f /root/*ks; passwd -d root; passwd -l root; rm -f /etc/resolv.conf; ln -sf /run/NetworkManager/resolv.conf /etc/resolv.conf; echo manage_PasswordAuthentication ;sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config; sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/g' /etc/ssh/sshd_config"]
  }

  provisioner "ansible" {
    ansible_ssh_extra_args = ["-oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa"]
    extra_arguments        = ["-e ansible_ssh_pass=[[ or .ssh_password_redhat ]]"]
    playbook_file          = "./playbook.yml"
    user                   = "[[ .ssh_username_redhat ]]"
  }
}

locals {
  packerstarttime = formatdate("YYYY-MM-DD", timestamp())
  vmdate = formatdate("YYMM", timestamp())
}

variable "password" {
  type = string
}

variable "username" {
  type = string
}