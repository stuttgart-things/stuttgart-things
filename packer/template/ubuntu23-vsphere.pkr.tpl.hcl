packer {
  required_version = ">= [[ .ubuntu23PackerMinVersion ]]"
  required_plugins {
    vmware = {
      source  = "[[ .vmWareProvider ]]"
      version = ">= [[ .ubuntu23PackerVMwarePluginMinVersion ]]"
    }
    ansible = {
      source  = "[[ .ansibleProvisioner ]]"
      version = ">= [[ .ansibleProvisionerMinVersion ]]"
    }
  }
}

source "vsphere-iso" "autogenerated_1" {
  CPUs                 = [[ .cpu ]]
  RAM                  = [[ .ram ]]
  RAM_reserve_all      = true
  boot_command            = ["<esc><esc><esc><esc>e<wait>", "linux /casper/vmlinuz autoinstall quiet ---<enter><wait>", "initrd /casper/initrd<enter><wait>", "boot<enter>", "<enter><f10><wait720>"]
  boot_order           = "disk,cdrom"
  ip_settle_timeout    = "[[ .ipSettleTimeout ]]"
  boot_wait            = "[[ .bootWait ]]"
  cd_files             = ["[[ .packerConfigMountPath ]]/user-data", "[[ .packerConfigMountPath ]]/meta-data"]
  cd_label             = "cidata"
  cluster              = "[[ .cluster ]]"
  convert_to_template  = "true"
  datastore            = "[[ .datastore ]]"
  disk_controller_type = ["pvscsi"]
  folder               = "[[ .folder ]]"
  guest_os_type        = "ubuntu64Guest"
  host                 = "[[ .host ]]"
  insecure_connection  = "true"
  ip_wait_timeout      = "[[ .ipWaitTimeout ]]"
  iso_checksum         = "[[ .ubuntu23IsoChecksum ]]"
  iso_urls             = ["[[ .ubuntu23IsoUrl ]]"]
  network_adapters {
    network      = "[[ .network ]]"
    network_card = "[[ .ubuntu23networkCard ]]"
  }
  notes                  = "stuttgart-things/ubuntu23\n\nBuild Date: ${local.packerstarttime} w/ packer\nOS: ubuntu23\nISO: https://releases.ubuntu.com/lunar/ubuntu-23.04-live-server-amd64.iso \nProvisioning: plays/packer-provisioning/base-os.yaml\n\n/Patrick Hermann (patrick.hermann@sva.de)\n/Christian MÃ¼ller (christian.mueller@sva.de)\n/Martin Wolf (martin.wolf@sva.de)"
  password               = "${ var.password }"
  ssh_handshake_attempts = "900"
  ssh_password           = "[[ .ubuntu23Password ]]"
  ssh_timeout            = "[[ .sshTimeout ]]"
  ssh_username           = "[[ .ubuntu23User ]]"
  storage {
    disk_size             = [[ .ubuntu23DiskSize ]]
    disk_thin_provisioned = true
  }
  username       = "${ var.username }"
  vcenter_server = "[[ .vcenterServer ]]"
  vm_name        = "[[ .vmTemplateName ]]"
}

build {
  sources = ["source.vsphere-iso.autogenerated_1"]

  provisioner "shell" {
    inline = ["[[ .ubuntu23ShellProvisioner ]]"]
  }

  provisioner "ansible" {
    ansible_env_vars       = ["ANSIBLE_REMOTE_TEMP=/tmp", "ANSIBLE_HOST_KEY_CHECKING=False", "ANSIBLE_SSH_ARGS=-oForwardAgent=yes -oControlMaster=auto -oControlPersist=60s -oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa", "ANSIBLE_NOCOLOR=True"]
    extra_arguments        = ["-e ansible_ssh_pass=ubuntu -vv"]
    keep_inventory_file    = "true"
    playbook_file          = "[[ .ansiblePlayMountPath ]]/[[ .ansibleOsProvioning ]].yaml"
    galaxy_file            = "[[ .ansiblePlayMountPath ]]/requirements.yaml"
    galaxy_force_install   = "true"
    use_proxy              = "false"
    user                   = "[[ .ubuntu23User ]]"
  }
}

locals {
  packerstarttime = formatdate("YYYYMMDD", timestamp())
}

variable "password" {
  type = string
}

variable "username" {
  type = string
}
