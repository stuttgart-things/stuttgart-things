---
configmaps:
  packer:
    ubuntu23-vsphere.pkr.hcl: |
      packer {
        required_version = ">= {{ .ubuntu23PackerMinVersion }}"
        required_plugins {
          vmware = {
            version = ">= {{ .ubuntu23PackerVMwarePluginMinVersion }}"
            source  = "{{ .vmWareProvider }}"
          }
        }
      }

      locals {
        packerstarttime = formatdate("YYYYMMDD", timestamp())
      }

      variable "password" {
        type = string
      }

      variable "username" {
        type = string
      }

      source "vsphere-iso" "autogenerated_1" {
        CPUs                 = {{ .cpu }}
        RAM                  = {{ .ram }}
        RAM_reserve_all      = true
        boot_command            = ["<esc><esc><esc><esc>e<wait>", "linux /casper/vmlinuz autoinstall quiet ---<enter><wait>", "initrd /casper/initrd<enter><wait>", "boot<enter>", "<enter><f10><wait360>"]
        boot_order           = "disk,cdrom"
        boot_wait            = "4s"
        cd_files             = ["{{ .packerConfigMountPath }}/user-data", "{{ .packerConfigMountPath }}/meta-data"]
        cd_label             = "cidata"
        cluster              = "{{ .cluster }}"
        convert_to_template  = "true"
        datastore            = "{{ .datastore }}"
        disk_controller_type = ["pvscsi"]
        folder               = "{{ .folder }}"
        guest_os_type        = "ubuntu64Guest"
        host                 = "{{ .host }}"
        insecure_connection  = "true"
        ip_wait_timeout      = "{{ .ipWaitTimeout }}"
        iso_checksum         = "{{ .ubuntu23IsoChecksum }}"
        iso_urls             = ["{{ .ubuntu23IsoUrl }}"]
        network_adapters {
          network      = "{{ .network }}"
          network_card = "vmxnet3"
        }
        notes                  = "stuttgart-things/ubuntu23\n\nBuild Date: ${local.packerstarttime} w/ packer\nOS: ubuntu23\nISO: https://releases.ubuntu.com/lunar/ubuntu-23.04-live-server-amd64.iso \nProvisioning: plays/packer-provisioning/base-os.yaml\n\n/Patrick Hermann (patrick.hermann@sva.de)\n/Christian MÃ¼ller (christian.mueller@sva.de)\n/Martin Wolf (martin.wolf@sva.de)"
        password               = "${ var.password }"
        ssh_handshake_attempts = "900"
        ssh_password           = "{{ .ubuntu23tmpSSHPassword }}"
        ssh_timeout            = "20m"
        ssh_username           = "{{ .ubuntu23tmpSSHUser }}"
        storage {
          disk_size             = 15360
          disk_thin_provisioned = true
        }
        username       = "${ var.username }"
        vcenter_server = "{{ .vcenterServer }}"
        vm_name        = "ubuntu23-{{ .ansibleOsProvioning }}"
      }

      build {
        sources = ["source.vsphere-iso.autogenerated_1"]

        provisioner "shell" {
          inline = ["sudo apt-get -y update; sudo apt-get -y upgrade; sudo apt-get -y install python3; sudo apt-get autoremove --purge -y && sudo apt-get autoclean -y && sudo apt-get clean -y; sudo truncate -s 0 /etc/machine-id && echo 'machine-id was reset successfully'; sudo systemctl stop systemd-resolved; sudo sed -i 's/#DNSStubListener=yes/DNSStubListener=no/g' /etc/systemd/resolved.conf; sudo rm /etc/resolv.conf; sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf; sudo systemctl start systemd-resolved"]
        }

        provisioner "ansible" {
          ansible_env_vars       = ["ANSIBLE_REMOTE_TEMP=/tmp", "ANSIBLE_HOST_KEY_CHECKING=False", "ANSIBLE_SSH_ARGS=-oForwardAgent=yes -oControlMaster=auto -oControlPersist=60s -oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa", "ANSIBLE_NOCOLOR=True"]
          extra_arguments        = ["-e ansible_ssh_pass=ubuntu -vv"]
          keep_inventory_file    = "true"
          playbook_file          = "{{ .ansiblePlayMountPath }}/{{ .ansibleOsProvioning }}.yaml"
          use_proxy              = "false"
          user                   = "ubuntu"
        }
      }
