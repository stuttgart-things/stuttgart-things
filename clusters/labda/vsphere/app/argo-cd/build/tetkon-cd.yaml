---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tekton-cd-pipelineruns
  namespace: argocd
spec:
  project: app
  sources:
  - repoURL: eu.gcr.io/stuttgart-things
    chart: tekton-resources
    targetRevision: v0.47.22
    helm:
      valueFiles:
      - $values/images/pipelineRuns.yaml
  - repoURL: https://github.com/stuttgart-things/stuttgart-things.git
    targetRevision: HEAD
    ref: values
  destination:
    name: dev11
    namespace: tektoncd
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: tekton-cd
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - app: tekton
            destination: dev11
            kind: workspaces
            namespace: tektoncd
            repoURL: eu.gcr.io/stuttgart-things
            chart: tekton-resources
            targetRevision: v0.47.22
            appValues: |
              enableWorkspaces: true
              workspaces:
                buildah-tekton:
                  namespace: tektoncd
                  volumeMode: Filesystem
                  storageClassName: nfs3-csi2
                  storage: 10Gi
                  accessModes:
                    - ReadWriteOnce
                helm-tekton:
                  namespace: tektoncd
                  volumeMode: Filesystem
                  storageClassName: nfs3-csi2
                  storage: 2Gi
                  accessModes:
                    - ReadWriteOnce
          - app: tekton
            destination: dev11
            kind: secrets
            namespace: tektoncd
            repoURL: eu.gcr.io/stuttgart-things
            chart: tekton-resources
            targetRevision: v0.47.22
            appValues: |
              enableSecrets: true
              enableGitSecretsSSH: true
              enableRegistryCredentials: true
              registryCredentials:
                scr-labda:
                  labels:
                    app: tekton
                    technology: kaniko
                  dockerConfigJson: <path:apps/data/scr#dockerconfig>
              secrets:
                scr-labda-inline:
                  name: scr-labda-inline
                  labels:
                    app: tekton
                    technology: buildah
                  secretKVs:
                    username: <path:apps/data/scr#username>
                    password: <path:apps/data/scr#password>
                gcr-reg:
                  name: gcr-reg
                  labels:
                    app: tekton
                    technology: buildah
                  dataType: data
                  secretKVs:
                    gcr.json: <path:apps/data/gcr#gcrJson>
              gitSecretsSSH:
                github:
                  name: github-ssh
                  labels:
                    app: tekton
                    technology: git
                  dataType: data
                  secretKVs:
                    id_rsa: <path:apps/data/yacht#github-ssh>
          - app: tekton
            destination: dev11
            kind: tasks
            namespace: tektoncd
            repoURL: eu.gcr.io/stuttgart-things
            chart: tekton-resources
            targetRevision: v0.47.22
            appValues: |
              enableTasks: true
          - app: tekton
            destination: dev11
            kind: pipelines
            namespace: tektoncd
            repoURL: eu.gcr.io/stuttgart-things
            chart: tekton-resources
            targetRevision: v0.47.22
            appValues: |
              enablePipelines: true
  template:
    metadata:
      name: '{{ app }}-{{ kind }}-{{ destination }}'
    spec:
      project: app
      source:
        repoURL: '{{ repoURL }}'
        chart: '{{ chart }}'
        targetRevision: '{{ targetRevision }}'
        plugin:
          name: argocd-vault-plugin-helm
          env:
            - name: HELM_VALUES
              value: |
                {{ appValues }}
      destination:
        name: '{{ destination }}'
        namespace: '{{ namespace }}'
      syncPolicy:
        syncOptions:
        - CreateNamespace=true
        automated:
          prune: true
          selfHeal: false