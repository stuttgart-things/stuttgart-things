# create a namespace
apiVersion: v1
kind: Namespace
metadata:
  name: test-csi
---
# create a service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: webapp
  namespace: test-csi
---
# create a cluster role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: webapp-test-csi-auth-delegator-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: webapp
    namespace: test-csi
---
# create a secret provider class
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: test-csi-creds
  namespace: test-csi
spec:
  provider: vault
  parameters:
    roleName: "read-global-and-local-kvv2"
    ## optional, because already set in the helm chart of vault csi provider
    # vaultAddress: https://vault.dev43.sthings-pve.labul.sva.de
    # vaultNamespace: root
    # vaultCACertPath: /mnt/vault-ingress-tls/ca.crt
    # vaultKubernetesMountPath: pve-maverick
    objects: |
      - objectName: first
        secretPath:  kvv2-pve-maverick/data/test
        secretKey: first
---
# deploy the webapp
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: test-csi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      serviceAccountName: webapp
      containers:
        - name: webapp
          image: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - name: test-csi-creds
              mountPath: /mnt/test-csi-creds
              readOnly: true
      volumes:
        - name: test-csi-creds
          csi:
            driver: "secrets-store.csi.k8s.io"
            readOnly: true
            volumeAttributes:
              secretProviderClass: test-csi-creds
