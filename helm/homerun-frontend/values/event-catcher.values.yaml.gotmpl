---
event-catcher:
  enabled: {{ .Values.eventCatcher.enabled }}
  deployment:
    volumes:
      certs:
        volumeKind: configMap
    containers:
      {{ .Values.eventCatcher.name }}:
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 10; cat {{ .Values.tmpCertDir }}/{{ .Values.pubCertName }} | base64 -d > {{ .Values.certDir }}/{{ .Values.pubCertName }};  update-ca-certificates
        volumeMounts:
          certs:
            mountPath: {{ .Values.tmpCertDir }}/
            volumeKind: emptyDir

  configmaps:
    {{ .Values.eventCatcher.name }}:
      API_PATH: "{{ .Values.eventCatcher.apiPath }}"
      PORT: "{{ .Values.eventCatcher.targetPort }}"
      REDIS_STREAM: {{ .Values.stream }}
      REDISEARCH_INDEX: {{ .Values.searchIndex }}

    certs:
      {{ .Values.pubCertName }}: |
        {{ .Values.pubCert }}

  secrets:
    redis-connection-{{ .Values.eventCatcher.name }}:
      name: redis-connection-{{ .Values.eventCatcher.name }}
      labels:
        app: {{ .Values.eventCatcher.name }}
      dataType: stringData
      secretKVs:
        REDIS_SERVER: {{ .Values.redisStack.serviceName }}.{{ .Release.Namespace }}.svc.cluster.local
        REDIS_PORT: {{ .Values.redisStack.port }}
        REDIS_PASSWORD: {{ .Values.redisStack.password }}

  services:
    {{ .Values.eventCatcher.name }}:
      labels:
        app: {{ .Values.eventCatcher.name }}
      ports:
        - name: ingress-port
          protocol: TCP
          value: {{ .Values.eventCatcher.targetPort }}
          expose:
            service:
              type: ClusterIP
              port: {{ .Values.eventCatcher.targetPort }}
      selectorLabels:
        app: {{ .Values.eventCatcher.name }}

  ingress:
    {{ .Values.eventCatcher.name }}-events:
      labels:
        app: {{ .Values.eventCatcher.name }}
      name: {{ .Values.eventCatcher.name }}-events
      ingressClassName: {{ .Values.ingressClass }}
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
      service:
        name: {{ .Values.eventCatcher.name }}-service
        port: {{ .Values.eventCatcher.targetPort }}
        path: /{{ .Values.eventCatcher.eventsPath }}
        pathType: Prefix
      hostname: {{ .Values.hostname }}
      domain: {{ .Values.domain }}
      tls:
        secretName: {{ .Values.eventCatcher.name }}-ingress-tls
        host: {{ .Values.hostname }}.{{ .Values.domain }}
    {{ .Values.eventCatcher.name }}-documents:
      labels:
        app: {{ .Values.eventCatcher.name }}
      name: {{ .Values.eventCatcher.name }}-documents
      ingressClassName: {{ .Values.ingressClass }}
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
      service:
        name: {{ .Values.eventCatcher.name }}-service
        port: {{ .Values.eventCatcher.targetPort }}
        path: /{{ .Values.eventCatcher.documentsPath }}
        pathType: Prefix
      hostname: {{ .Values.hostname }}
      domain: {{ .Values.domain }}
      tls:
        secretName: {{ .Values.eventCatcher.name }}-ingress-tls
        host: {{ .Values.hostname }}.{{ .Values.domain }}

  customresources:
    {{ .Values.eventCatcher.name }}-certificate:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: {{ .Values.eventCatcher.name }}-ingress
        labels:
          app: {{ .Values.eventCatcher.name }}
      spec:
        commonName: {{ .Values.hostname }}.{{ .Values.domain }}
        dnsNames:
          - {{ .Values.hostname }}.{{ .Values.domain }}
        issuerRef:
          name: {{ .Values.issuerName }}
          kind: {{ .Values.issuerKind }}
        secretName: {{ .Values.eventCatcher.name }}-ingress-tls
