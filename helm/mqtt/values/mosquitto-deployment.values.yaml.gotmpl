apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    # field.cattle.io/publicEndpoints: '[{"addresses":["10.31.103.17"],"port":1883,"protocol":"TCP","serviceName":"mosquitto:mosquitto","allNodes":false},{"addresses":["10.31.103.17"],"port":9090,"protocol":"TCP","serviceName":"mosquitto:mosquitto","allNodes":false}]'
    meta.helm.sh/release-name: {{ .Values.appName }}
    meta.helm.sh/release-namespace: {{ .Values.appName }}
  generation: 2
  labels:
    app.kubernetes.io/instance: {{ .Values.appName }}
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: {{ .Values.appName }}
    helm.sh/chart: {{ .Values.chartVersion }}
  name: {{ .Values.appName }}
  namespace: {{ .Values.appName }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Values.appName }}
      app.kubernetes.io/name: {{ .Values.appName }}
  strategy:
    type: {{ .Values.strategyType }}
  template:
    metadata:
      annotations:
        checksum/config: f3ce904029bcdfb52819f469ab7c64b5f7037b170bcb2d7e551d5e8b8786822
        checksum/secret: b1be82e97584812b3df62d258f3a43ff461a67798bb7ce49f130ff0375cd3db
      labels:
        app.kubernetes.io/instance: {{ .Values.appName }}
        app.kubernetes.io/name: {{ .Values.appName }}
    spec:
      containers:
      - image: {{ .Values.mqttImage }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 1
          successThreshold: 1
          tcpSocket:
            port: websocket
          timeoutSeconds: 1
        name: {{ .Values.appName }}
        ports:
        - containerPort: 1883
          name: mqtt
          protocol: TCP
        - containerPort: 9090
          name: websocket
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 3
          successThreshold: 1
          tcpSocket:
            port: websocket
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mosquitto/config/mosquitto.conf
          name: config
          subPath: mosquitto.conf
        - mountPath: /mosquitto/data
          name: data
        - mountPath: /etc/mosquitto/passwordfile
          name: passwordfile
          subPath: passwordfile
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ .Values.appName }}
      serviceAccountName: {{ .Values.appName }}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ .Values.appName }}
        name: config
      - emptyDir: {}
        name: data
      - name: passwordfile
        secret:
          defaultMode: 420
          secretName: {{ .Values.appName }}
