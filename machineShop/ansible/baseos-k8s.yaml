apiVersion: v1
kind: ConfigMap
metadata:
  name: ansible-playbooks
  namespace: ansible
  labels:
    app: machine-shop-operator
    machine-shop-operator: ansible
data:
  play.yaml: |
    ---
    - name: Prepare env
      ansible.builtin.import_playbook: prepare-env.yaml

    - name: Execute playbook
      ansible.builtin.import_playbook: "{{ target_play }}.yaml"
  prepare-env.yaml: |
    ---
    - hosts: localhost
      become: false

      vars:
        home_dir: "{{ lookup('env','HOME') }}"
        targets: "{{ lookup('env','TARGETS') }}"
        targets_list: "{{ targets.split(';') }}"
        inv_path: "{{ lookup('env','INV_PATH') }}"

        vault_approle_id: "{{ lookup('env', 'VAULT_ROLE_ID') }}"
        vault_approle_secret: "{{ lookup('env', 'VAULT_SECRET_ID') }}"
        vault_url: "{{ lookup('env', 'VAULT_ADDR') }}"
        ssh_key: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=ssh/data/sthings:privateKey validate_certs=false auth_method=approle role_id={{ vault_approle_id }} secret_id={{ vault_approle_secret }} url={{ vault_url }}') }}"

      tasks:

      - name: Create hosts
        ansible.builtin.set_fact:
          target_hosts: "{{ targets_list | join('\n') }}"


      - name: Write vars on inv file
        ansible.builtin.blockinfile:
          path: "{{ inv_path }}"
          block: |
            [all]
            {{ target_hosts }}

            [all:vars]
            ansible_user=sthings
            host_key_checking=false

      - name: Creating ssh directory
        ansible.builtin.file:
          path: "{{ home_dir }}/.ssh/"
          state: directory

      - name: Creating ssh private key file
        ansible.builtin.copy:
          dest: "{{ home_dir }}/.ssh/id_rsa"
          content: "{{ ssh_key | b64decode }}"
          mode: '0600'

      - ansible.builtin.meta: refresh_inventory
  baseos-setup.yaml: |
    - hosts: all
      become: true
      gather_facts: true

      vars:
        manage_filesystem: "{{ lookup('env','MANAGE_FILESYSTEM') | default('true') }}"
        update_packages: "{{ lookup('env','UPDATE_PACKAGES') | default('true') }}"
        install_requirements: "{{ lookup('env','INSTALL_REQUIREMENTS') | default('true') }}"
        install_motd: "{{ lookup('env','INSTALL_MOTD') | default('true') }}"
        username: "{{ lookup('env','USERNAME') | default('sthings') }}"
        lvm_home_sizing: "{{ lookup('env','LVM_HOME_SIZING') | default('15%') }}"
        lvm_root_sizing: "{{ lookup('env','LVM_ROOT_SIZING') | default('35%') }}"
        lvm_var_sizing: "{{ lookup('env','LVM_VAR_SIZING') | default('50%') }}"
        send_to_msteams: "{{ lookup('env','SEND_TO_MSTEAMS') | default('false') }}"
        msteams_webhook_url: "{{ lookup('env','MSTEAMS_WEBHOOK_URL') | default('') }}"
        vault_instances:
          - https://vault.tiab.labda.sva.de:8200
          - https://vault.labul.sva.de:8200
          - https://vault-vsphere.labul.sva.de:8200
          - https://vault-pve.labul.sva.de:8200
      roles:
        - role: manage-filesystem
          when: manage_filesystem|bool

        - role: install-requirements
          when: install_requirements|bool

      post_tasks:

        - name: Install vault ca certificate to local system from multiple instances
          ansible.builtin.include_role:
            name: install-configure-vault
            tasks_from: install-ca-auth
          vars:
            vault_url: "{{ vault_instance }}"
          loop: "{{ vault_instances }}"
          loop_control:
            loop_var: vault_instance
          when: vault_instances is defined

        - name: Send webhook when base-os setup was executed
          ansible.builtin.include_role:
            name: create-send-webhook
          vars:
            summary_text: "base-os-setup was executed on {{ ansible_fqdn }}"
            msteams_url: "{{ msteams_webhook_url }}"
            card_title: "base-os-setup was executed on {{ ansible_fqdn }}"
            act_image: "{{ logo_pic }}"
            act_title: "{{ quotes | random }}"
            act_text: "{{ quotes | random }}"
            os_facts: |
              filesystem was {{ '' if manage_filesystem|bool else 'not' }} managed
              operating system {{ ansible_distribution }} {{ ansible_distribution_major_version }} was {{ '' if update_os|bool else 'not' }} updated
              vault-ca was {{ '' if install_vault_ca|bool else 'not' }} installed
              message of the day was {{ '' if motd|bool else 'not' }} installed
              metric beate was {{ '' if install_metric_beat|bool else 'not' }} installed
            ms_teams_notification_type: "simple"
          tags: notify
          ignore_errors: true
          when: send_to_msteams|bool
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: vault
#   namespace: ansible
#   labels:
#     app: machine-shop-operator
#     machine-shop-operator: ansible
# type: Opaque
# data:
#   VAULT_ADDR: aHR0cHM6Ly92YXVsdC12c3BoZXJlLnRpYWIubGFiZGEuc3ZhLmRlOjgyMDA=
#   VAULT_NAMESPACE: cm9vdA==
#   VAULT_ROLE_ID: NmI3MDFiOWItMzNlZC0zYWNhLTQxOTctNTJmYmY2ZmE0NGEz
#   VAULT_SECRET_ID:
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: ansible
#   namespace: ansible
#   labels:
#     app: machine-shop-operator
#     machine-shop-operator: ansible
# spec:
#   containers:
#     # 65532
#   - name: ansible
#     image: eu.gcr.io/stuttgart-things/sthings-ansible:7.5.0-5
#     command: ["/bin/sh", "-ec", "touch ${INV_PATH} && sleep 1000"]
#     env:
#       - name: ANSIBLE_HOST_KEY_CHECKING
#         value: "False"
#       - name: TARGETS
#         value: "10.100.136.72;10.100.136.73"
#       - name: INV_PATH
#         value: /tmp/inv
#     securityContext:
#       runAsNonRoot: true
#       runAsUser: 65532
#     envFrom:
#       - secretRef:
#           name: vault
#     volumeMounts:
#       - name: ansible-playbooks
#         mountPath: /home/nonroot/ansible
#   volumes:
#     - configMap:
#         name: ansible-playbooks
#       name: ansible-playbooks
---
apiVersion: batch/v1
kind: Job
metadata:
  name: baseos-setup
  namespace: ansible
  labels:
    app: machine-shop-operator
    machine-shop-operator: ansible
spec:
  template:
    metadata:
      name: baseos-setup
      labels:
        app: machine-shop-operator
        machine-shop-operator: ansible
    spec:
      containers:
        - name: ansible
          image: eu.gcr.io/stuttgart-things/sthings-ansible:7.5.0-5
          command: ["/bin/sh", "-ec", "touch ${INV_PATH} && ansible-playbook -i $INV_PATH $HOME/ansible/play.yaml -vv -e target_play=baseos-setup"]
          env:
            - name: ANSIBLE_HOST_KEY_CHECKING
              value: "False"
            - name: TARGETS
              value: "10.100.136.72;10.100.136.73"
            - name: INV_PATH
              value: /tmp/inv
          securityContext:
            runAsNonRoot: true
            runAsUser: 65532
          envFrom:
            - secretRef:
                name: vault
          volumeMounts:
            - name: ansible-playbooks
              mountPath: /home/nonroot/ansible
      volumes:
        - configMap:
            name: ansible-playbooks
          name: ansible-playbooks
      restartPolicy: Never