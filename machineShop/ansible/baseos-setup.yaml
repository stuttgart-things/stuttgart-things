---
- hosts: all
  become: true
  gather_facts: true
    
  vars:
    manage_filesystem: "{{ lookup('env','MANAGE_FILESYSTEM') | default('true') }}"
    update_packages: "{{ lookup('env','UPDATE_PACKAGES') | default('true') }}"
    install_requirements: "{{ lookup('env','INSTALL_REQUIREMENTS') | default('true') }}"
    install_motd: "{{ lookup('env','INSTALL_MOTD') | default('true') }}"
    username: "{{ lookup('env','USERNAME') | default('sthings') }}"
    lvm_home_sizing: "{{ lookup('env','LVM_HOME_SIZING') | default('15%') }}"
    lvm_root_sizing: "{{ lookup('env','LVM_ROOT_SIZING') | default('35%') }}"
    lvm_var_sizing: "{{ lookup('env','LVM_VAR_SIZING') | default('50%') }}"
    send_to_msteams: "{{ lookup('env','SEND_TO_MSTEAMS') | default('false') }}"
    msteams_webhook_url: "{{ lookup('env','MSTEAMS_WEBHOOK_URL') | default('') }}"
    vault_instances:
      - https://vault.tiab.labda.sva.de:8200
      - https://vault.labul.sva.de:8200
      - https://vault-vsphere.labul.sva.de:8200
      - https://vault-pve.labul.sva.de:8200
  roles:
    - role: manage-filesystem
      when: manage_filesystem|bool

    - role: install-requirements
      when: install_requirements|bool

  post_tasks:
    - name: Install vault ca certificate to local system from multiple instances
      ansible.builtin.include_role:
        name: install-configure-vault
        tasks_from: install-ca-auth
      vars:
        vault_url: "{{ vault_instance }}"
      loop: "{{ vault_instances }}"
      loop_control:
        loop_var: vault_instance
      when: vault_instances is defined
      
    - name: Send webhook when base-os setup was executed
      ansible.builtin.include_role:
        name: create-send-webhook
      vars:
        summary_text: "base-os-setup was executed on {{ ansible_fqdn }}"
        msteams_url: "{{ msteams_webhook_url }}"
        card_title: "base-os-setup was executed on {{ ansible_fqdn }}"
        act_image: "{{ logo_pic }}"
        act_title: "{{ quotes | random }}"
        act_text: "{{ quotes | random }}"
        os_facts: |
          filesystem was {{ '' if manage_filesystem|bool else 'not' }} managed  
          operating system {{ ansible_distribution }} {{ ansible_distribution_major_version }} was {{ '' if update_os|bool else 'not' }} updated  
          vault-ca was {{ '' if install_vault_ca|bool else 'not' }} installed  
          message of the day was {{ '' if motd|bool else 'not' }} installed  
          metric beate was {{ '' if install_metric_beat|bool else 'not' }} installed  
        ms_teams_notification_type: "simple"
      tags: notify
      ignore_errors: true
      when: send_to_msteams|bool
    
