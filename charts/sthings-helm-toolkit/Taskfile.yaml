---
version: "3"
vars:
  REGISTRY: eu.gcr.io
  REPOSITORY_NAME: stuttgart-things
  PROJECT_NAME:
    sh: pwd | grep -o "[^/]*$"
  UPDATED_TAG:
    sh: old_tag=$(git describe --tags --abbrev=0 | cut -d "." -f3); new_tag=$((old_tag+1)); echo $new_tag
  UPDATED_TAG_VERSION:
    sh: t1=$(git describe --tags --abbrev=0 | cut -f1 -d'.'); t2=$(git describe --tags --abbrev=0 | cut -f2 -d'.'); echo $t1.$t2.{{.UPDATED_TAG}}

tasks:
  lint:
    desc: Lint code
    cmds:
      - cmd: helm lint .
        ignore_error: true

  package:
    desc: Update Chart.yaml and package archive
    cmds:
      - "sed -i 's/version: .*/version: {{ .UPDATED_TAG_VERSION }}/g' Chart.yaml"
      - "sed -i 's/appVersion: .*/appVersion: {{ .UPDATED_TAG_VERSION }}/g' Chart.yaml"
      - helm package .

  push:
    desc: Push to registry
    deps: [package]
    cmds:
      - helm push {{ .PROJECT_NAME }}-{{ .UPDATED_TAG_VERSION }}.tgz oci://{{ .REGISTRY }}/{{ .REPOSITORY_NAME }}
      - rm -rf {{ .PROJECT_NAME }}-{{ .UPDATED_TAG_VERSION }}.tgz
    vars:
      PACKAGE:
        sh: "ls *stgz* -Art | tail -n 1"

  tag:
    desc: Commit, push & tag the module
    deps: [lint, push]
    cmds:
      - git pull
      - git add *
      - git commit -am 'updated {{ .PROJECT_NAME }} {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}'
      - git push
      - git tag -a {{ .UPDATED_TAG_VERSION }} -m 'updated for stuttgart-things {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}'
      - git push origin --tags
