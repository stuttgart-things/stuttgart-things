---
- hosts: "{{ target_host | default('all') }}"
  become: true
  vars:
    golang_users:
      - username: otto
        name: otto user
        group: golang
        uid: 1011
        home: /home/otto
        profile: |
          alias ll='ls -ahl'
          export GOROOT=/usr/local/go
          export PATH=$GOROOT/bin:$PATH
          export GOPATH=/home/otto/usr/local/go
          export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
        generate_ssh_key: true
        #ssh_key:
        #  - "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        enable_ssh_tcp_forwarding: true
        password: "!"
      - username: bob
        name: bob user
        group: golang
        uid: 1013
        home: /home/bob
        profile: |
          alias ll='ls -ahl'
          export GOROOT=/usr/local/go
          export PATH=$GOROOT/bin:$PATH
          export GOPATH=$HOME/go
          export PATH=$PATH:$GOPATH/bin
        generate_ssh_key: true
        #ssh_key:
        #  - "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        enable_ssh_tcp_forwarding: true
        password: "!"

    groups_golang:
      - name: golang
        gid: 31000

    golang_version: 1.22.2
    source_url: "https://go.dev/dl/go1.22.2.linux-amd64.tar.gz"
    download_dir: /tmp/downloads
    golang_install_dir: /usr/local/
    go_checksum_type: "sha256"

    # Fill in go_* variables if golang_users is not defined and you want .bashrc exports for old users
    #go_username: otto
    #go_usergroup: golang
    #go_userhome: "/home/otto"

  pre_tasks:
    - name: Check if Golang already exists
      ansible.builtin.stat:
        path: "{{ golang_install_dir }}/go"
      register: check_golang

    - get_checksum:
        path: "{{ golang_install_dir }}go"
        checksum_type: "{{ go_checksum_type }}"
      register: checksum_old
      when: check_golang.stat.exists

    - name: Add golang exports for old users to bashrc
      ansible.builtin.blockinfile:
        block: |
          export GOROOT=/usr/local/go
          export PATH=$GOROOT/bin:$PATH
          export GOPATH=$HOME/usr/local/go
          export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
        dest: "{{ go_userhome }}/.bashrc"
        owner: "{{ go_username }}"
        group: "{{ go_usergroup }}"
        mode: 0644
        create: true
      when: golang_users is not defined

  tasks:
    - name: Create temporary download directory (if it does not exist)
      ansible.builtin.file:
        path: "{{ download_dir }}"
        state: directory
        mode: '1777'

    - name: Download Golang
      ansible.builtin.get_url:
        url: "{{ source_url }}"
        dest: "{{ download_dir }}/"

    - name: Unarchive Golang 
      ansible.builtin.unarchive:
        src: "{{ download_dir }}/{{ source_url | regex_replace('^https://go.dev/dl/', '') }}"
        dest: "{{ download_dir }}/"
        mode: 0755
        validate_certs: false
        remote_src: true

    - get_checksum:
        path: "{{ download_dir }}/go"
        checksum_type: "{{ go_checksum_type }}"
      register: checksum_new

    - name: Remove Golang if version is not equal
      ansible.builtin.file:
        path: "{{ golang_install_dir }}go"
        state: absent
      when: checksum_new.checksum_value != checksum_old.checksum_value | default(None)

    - name: Copy Golang folder
      ansible.builtin.copy:
        src: "{{ download_dir }}/go"
        dest: "{{ golang_install_dir }}"
        mode: 0755
        remote_src: true
      become: true
      when: checksum_new.checksum_value != checksum_old.checksum_value | default(None)

    - name: Delete downloading dir
      ansible.builtin.file:
        path: "{{ download_dir }}/"
        state: absent

    # CREATE USERS
    - name: Create golang users
      ansible.builtin.include_role:
        name: create-os-user
      vars:
        users: "{{ golang_users }}"
        groups_to_create: "{{ groups_golang }}"
      when: golang_users is defined

    # WRITE EXPORTS TO BASHRC
    - name: Add golang exports for new users to bashrc
      ansible.builtin.blockinfile:
        block: |
          export GOROOT=/usr/local/go
          export PATH=$GOROOT/bin:$PATH
          export GOPATH=$HOME/usr/local/go
          export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
        dest: "{{ item.home }}/.bashrc"
        owner: "{{ item.username }}"
        group: "{{ item.group }}"
        mode: 0644
        create: true
      loop: "{{ golang_users | default([]) }}"
      when: ansible_os_family != 'Debian' and golang_users is defined
