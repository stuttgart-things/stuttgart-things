---
configmaps:
    configure-rke-node.yaml: |
      ---
      - hosts: all
        become: true
        gather_facts: true
        vars:
          install_docker: false
        roles:
          - configure-rke-node

        roles:
          - role: deploy-configure-rke

        {{- if .Values.installFlux }}
        post_tasks:
          - name: Copy flux secrets to RKE2 manifests
            ansible.builtin.copy:
              src: /home/nonroot/flux/
              dest: /var/lib/rancher/rke2/server/manifests/
            when: inventory_hostname in groups['initial_master_node']
        {{- end }}

      - hosts: localhost
        become: false
        vars:
          vault_approle_id: {{`{{printf "%q" "{{ lookup('env', 'VAULT_ROLE_ID') }}" }}`}}
          vault_approle_secret: {{`{{printf "%q" "{{ lookup('env', 'VAULT_SECRET_ID') }}" }}`}}
          vault_url: {{`{{printf "%q" "{{ lookup('env', 'VAULT_ADDR') }}" }}`}}
          upload_kubeconfig_vault: {{ .Values.uploadKubeconfigVault }}
          rke2_fetched_kubeconfig_path: {{ .Values.rke2FetchedKubeconfigPath }}

        tasks:
          - name: Write secret to vault using key value V2 engine
            community.hashi_vault.vault_write:
              auth_method: approle
              url: {{`{{printf "%q" "{{ vault_url }}" }}`}}
              role_id: {{`{{printf "%q" "{{ vault_approle_id }}" }}`}}
              secret_id: {{`{{printf "%q" "{{ vault_approle_secret }}" }}`}}
              validate_certs: false
              path: {{ .Values.secretPathKubeconfig }}/{{ .Values.clusterName }}
              data:
                data:
                  kubeconfig: {{`{{printf "%q" "{{ lookup('ansible.builtin.file', rke2_fetched_kubeconfig_path) | b64encode }}" }}`}}
            when: upload_kubeconfig_vault|bool

      - hosts: localhost
        become: false
        vars:
          vault_approle_id: {{`{{printf "%q" "{{ lookup('env', 'VAULT_ROLE_ID') }}" }}`}}
          vault_approle_secret: {{`{{printf "%q" "{{ lookup('env', 'VAULT_SECRET_ID') }}" }}`}}
          vault_url: {{`{{printf "%q" "{{ lookup('env', 'VAULT_ADDR') }}" }}`}}
          github_token: {{`{{printf "%q" "{{ lookup('community.hashi_vault.hashi_vault', 'secret=apps/data/github:token validate_certs=false auth_method=approle role_id={{ vault_approle_id }} secret_id={{ vault_approle_secret }} url={{ vault_url }}') }}" }}`}}
          kubeconfig_vault_path: {{ .Values.secretPathKubeconfig }}/{{ .Values.clusterName }}:kubeconfig
          kubeconfig: {{`{{printf "%q" "{{ lookup('community.hashi_vault.hashi_vault', 'secret={{ kubeconfig_vault_path }} validate_certs=false auth_method=approle role_id={{ vault_approle_id }} secret_id={{ vault_approle_secret }} url={{ vault_url }}') }}" }}`}}
          kubeconfig_path: /home/nonroot/kubeconfig
          install_flux: {{ .Values.installFlux }}

        tasks:
          - name: Copy kubeconfig using inline content
            ansible.builtin.copy:
              content: {{`{{printf "%q" "{{ kubeconfig|b64decode }}" }}`}}
              dest: {{`{{printf "%q" "{{ kubeconfig_path }}" }}`}}
              remote_src: yes
            when: install_flux|bool

          - name: Flux bootstrap
            ansible.builtin.shell: |
              flux bootstrap github --owner=stuttgart-things --repository=stuttgart-things --path=clusters/{{ .Values.lab }}/{{ .Values.cloud }}/{{ .Values.clusterName }}
            environment:
              KUBECONFIG: {{`{{printf "%q" "{{ kubeconfig_path }}" }}`}}
              GITHUB_TOKEN: {{`{{printf "%q" "{{ github_token }}" }}`}}
            when: install_flux|bool


    create-downstream-cluster.yaml: |
      ---
      - hosts: all
        vars:
          rancher_api_url: https://rancher-things.app.4sthings.tiab.ssc.sva.de/v3
          cluster_name: dev8
          rancher_access_key: token-bwbmg
          rancher_secret_key: b2vd6qxl4vhzwqf2j8h97mm68h7sjs97r4mvm2wqfpcldlnb7mf5d2

        tasks:
          - name: Get cluster information
            ansible.builtin.uri:
              validate_certs: false
              url: "{{ rancher_api_url }}/clusters?name={{ cluster_name }}"
              user: "{{ rancher_access_key }}"
              password: "{{ rancher_secret_key }}"
              body_format: json
              method: GET
              force_basic_auth: yes
              headers:
                Content-Type: "application/json"
            register: cluster_info

          - name: Show clusterid
            ansible.builtin.debug:
              var:
                cluster_info.json.data[0].id

          - name: Set clusterid
            ansible.builtin.set_fact:
              cluster_id: "{{ cluster_info.json.data[0].id }}"

          - name: Get cluster registration tokens
            ansible.builtin.uri:
              validate_certs: false
              url: "{{ rancher_api_url }}/clusters/{{ cluster_id }}/clusterregistrationtokens?sort=insecureCommand"
              user: "{{ rancher_access_key }}"
              password: "{{ rancher_secret_key }}"
              body_format: json
              method: GET
              force_basic_auth: yes
              headers:
                  Content-Type: "application/json"
            register: cluster_registration_tokens

          - name: Get node Command
            ansible.builtin.debug:
              var: cluster_registration_tokens.json.data[0].nodeCommand

          - name: Set node Command
            ansible.builtin.set_fact:
              node_command: "{{ cluster_registration_tokens.json.data[0].nodeCommand }}"

          - name: Execute node command
            ansible.builtin.shell: |
              {{ cluster_registration_tokens.json.data[0].nodeCommand }} --worker

*/}}