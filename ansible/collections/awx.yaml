---
name: awx
version: 0.0.37
namespace: sthings
requirements: |
  roles:
    - src: https://github.com/stuttgart-things/download-install-binary.git
      scm: git
      version: 2024.05.24

playbooks:
  # ADD PLAYBOOK FOR DEPLOYING AWX CLI
  - name: base
    play: |
      ---
      - hosts: localhost
        vars:
          controller_host: "{{ lookup('env', 'CONTROLLER_HOST') }}"
          controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"
          controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"

        vars_files:
          - "{{ path | default('.') }}/{{ profile | default('base') }}.yaml"

        tasks:
          - name: Create organizations
            awx.awx.organization:
              name: "{{ item.value.name }}"
              description: "{{ item.value.description }}"
              state: "{{ item.value.state }}"
              galaxy_credentials:
                - Ansible Galaxy
              validate_certs: false
            loop: "{{ lookup('dict', organizations, wantlist=True) }}"
            when: organizations is defined

          - name: Add machine credential
            awx.awx.credential:
              name: "{{ item.value.name }}"
              description: "{{ item.value.description }}"
              organization: "{{ item.value.organization }}"
              credential_type: Machine
              state: "{{ item.value.state }}"
              inputs:
                username: "{{ item.value.user }}"
                ssh_key_data: "{{ item.value.awx_ssh_key }}"
              validate_certs: false
            loop: "{{ lookup('dict', machineCredentials, wantlist=True) }}"
            when: machineCredentials is defined

          - name: Create a valid SCM credential from a private_key file
            awx.awx.credential:
              name: "{{ item.value.name }}"
              organization: "{{ item.value.organization }}"
              state: "{{ item.value.state }}"
              credential_type: Source Control
              inputs:
                ssh_key_data: "{{ item.value.awx_ssh_key }}"
              validate_certs: false
            loop: "{{ lookup('dict', scmCredentials, wantlist=True) }}"
            when: scmCredentials is defined

          - name: Add inventory
            awx.awx.inventory:
              name: "{{ item.value.name }}"
              description: "{{ item.value.description | default (omit) }}"
              organization: "{{ item.value.organization }}"
              state: "{{ item.value.state }}"
              validate_certs: false
            loop: "{{ lookup('dict', inventories, wantlist=True) }}"
            when: inventories is defined

          - name: Add host
            awx.awx.host:
              name: "{{ item.value.name }}"
              description: "{{ item.value.description | default (omit) }}"
              inventory: "{{ item.value.inventory }}"
              state: "{{ item.value.state }}"
              variables: "{{ item.value.vmVariables | default (omit) }}"
              validate_certs: false
            loop: "{{ lookup('dict', hosts, wantlist=True) }}"
            when: hosts is defined

          - name: Create projects
            awx.awx.project:
              name: "{{ item.value.name }}"
              description: "{{ item.value.description }}"
              organization: "{{ item.value.organization }}"
              scm_url: "{{ item.value.scm_url }}"
              scm_type: "{{ item.value.scm_type }}"
              credential: "{{ item.value.credential }}"
              state: "{{ item.value.state }}"
              scm_update_on_launch: "{{ item.value.scm_update_on_launch | default(omit) }}"
              scm_update_cache_timeout: "{{ item.value.scm_update_cache_timeout | default(omit) }}"
              validate_certs: false
            loop: "{{ lookup('dict', projects, wantlist=True) }}"
            when: projects is defined

          - name: Add EE to the controller instance
            awx.awx.execution_environment:
              name: "{{ item.value.name }}"
              image: "{{ item.value.image }}"
              validate_certs: false
            loop: "{{ lookup('dict', execution_environment, wantlist=True) }}"
            when: execution_environment is defined

          - name: Create job templates
            awx.awx.job_template:
              name: "{{ item.value.name }}"
              job_type: "run"
              organization: "{{ item.value.organization }}"
              inventory: "{{ item.value.inventory }}"
              project: "{{ item.value.project }}"
              playbook: "{{ item.value.playbook }}"
              credentials: "{{ item.value.credentials }}"
              execution_environment: "{{ item.value.executionenv }}"
              state: "{{ item.value.state }}"
              validate_certs: true
              survey_enabled: "{{ item.value.survey_enabled | default(omit) }}"
              survey_spec: "{{ item.value.survey_spec | default(omit) }}"
              extra_vars: "{{ item.value.extraVars | default(omit) }}"
            loop: "{{ lookup('dict', templates, wantlist=True) }}"
            when: templates is defined

vars:
  - name: base
    file: |
      ---
      organizations:
        stuttgartThings:
          name: stuttgart-things
          description: stuttgart-things organization
          state: present

      machineCredentials:
        sthingsSSH:
          name: sthings-ssh
          description: stuttgart-things organization
          organization: stuttgart-things
          state: present
          user: sthings
          awx_ssh_key: "{{ lookup('file', '~/.ssh/id_rsa') }}"

      scmCredentials:
        sthingsSCM:
          name: sthings-scm
          organization: stuttgart-things
          state: present
          awx_ssh_key: "{{ lookup('file', '~/.ssh/id_rsa') }}"

      projects:
        stuttgartThings:
          name: stuttgart-things
          description: 
          organization: stuttgart-things
          scm_url: git@codehub.sva.de:Lab/stuttgart-things/stuttgart-things.git
          scm_type: git
          credential: sthings-scm
          state: present
          scm_update_on_launch: true
          scm_update_cache_timeout: 60

      execution_environment:
        sthings-ee:
          name: sthings-ee
          image: eu.gcr.io/stuttgart-things/sthings-awxee:23.6.0

      templates:
        stuttgartThings:
          name: hello AWX
          organization: stuttgart-things
          inventory: test-server
          project: stuttgart-things
          playbook: plays/hello-awx.yaml
          credentials: sthings-ssh
          executionenv: sthings-ee
          state: present

      inventories:
        testServer:
          name: test-server
          description: stuttgart-things organization
          organization: stuttgart-things
          state: present


      hosts:
        localhost:
          name: localhost
          description: stuttgart-things organization
          inventory: test-server
          state: present
