---
playbooks:
  - name: k3s
    play: |
      ---
      - hosts: "{{ target_host | default('all') }}"
        become: true
        gather_facts: true
        vars_files:
          - "{{ path | default('.') }}/{{ profile | default('k3s') }}.yaml"
        environment:
          KUBECONFIG: "{{ path_kubeconfig }}"

        post_tasks:
          - name: Create k3s config
            ansible.builtin.template:
              src: k3s.yaml
              dest: "{{ k3s_config_path }}"

          - name: Install k3s
            ansible.builtin.shell: |
              curl -sfL https://get.k3s.io | sh -s - --config={{ k3s_config_path }}

          - name: Install cilium
            ansible.builtin.shell: |
              cilium install \
                --set k8sServiceHost={{ api_server_ip }} \
                --set k8sServicePort={{ api_server_port }} \
                --set kubeProxyReplacement={{ kube_proxy_replacement }} \
                --helm-set=operator.replicas={{ operator_replicas }}

          - name: Wait for cilium to be ready
            ansible.builtin.shell: |
              cilium status --wait

          - name: Create root certificate
            block:
              - name: Generate self-signed certificate
                ansible.builtin.shell: |
                  mkdir -p .ssl
                  openssl genrsa -out .ssl/root-ca-key.pem 2048
                  openssl req -x509 -new -nodes -key .ssl/root-ca-key.pem \
                  -days 3650 -sha256 -out .ssl/root-ca.pem -subj "/CN=stuttgart-things"

              - name: Create cert-manager namespace and secret
                ansible.builtin.shell: |
                  kubectl create ns cert-manager
                  kubectl create secret tls -n cert-manager root-ca \
                  --cert=.ssl/root-ca.pem \
                  --key=.ssl/root-ca-key.pem
            when: create_root_cert|bool

        roles:
          - role: sthings.container.download_install_binary

  - name: uninstall_k3s
    play: |
      ---
      - hosts: "{{ target_host | default('all') }}"
        become: true
        gather_facts: true
        tasks:
          - name: Uninstall k3s
            ansible.builtin.shell: |
              /usr/local/bin/k3s-uninstall.sh

vars:
  - name: argo-cd-k3s
    file: |
      ---
      deployment_namespace: argo-cd
      helm_repositories:
        argo:
          url: https://argoproj.github.io/argo-helm

      helm_releases:
        argo-cd:
          ref: argo/argo-cd
          version: 7.6.8
          namespace: "{{ deployment_namespace }}"
          ignore: false
          wait: true
          release_values: |
            global:
              domain: {{ ingress_host }}
            configs:
              params:
                server.insecure: true
            server:
              ingress:
                enabled: true
                ingressClassName: nginx
                annotations:
                  nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
                  nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
                extraTls:
                  - hosts:
                    - {{ ingress_host }}
      post_manifests: {}

  - name: ingress-nginx-k3s
    file: |
      ---
      ingress_nginx_version: 4.11.2
      deployment_namespace: ingress-nginx
      helm_repositories:
        ingress-nginx:
          url: https://kubernetes.github.io/ingress-nginx

      helm_releases:
        ingress-nginx:
          ref: ingress-nginx/ingress-nginx
          version: "{{ ingress_nginx_version }}"
          namespace: "{{ deployment_namespace }}"
          ignore: false
          wait: true
          release_values: |
            controller:
              hostNetwork: true

        post_manifests: {}
  - name: k3s
    file: |
      ---
      cilium_version: 0.16.22 # datasource=github-tags depName=cilium/cilium-cli
      helm_version: 3.16.3 # datasource=github-tags depName=helm/helm
      kubectl_version: v1.30.2 # datasource=github-tags depName=kubernetes/kubectl
      k9s_version: v0.32.5 # datasource=github-tags depName=kubernetes/kubectl

      kube_proxy_replacement: true
      operator_replicas: 1
      api_server_ip: "{{ ansible_default_ipv4.address }}"
      api_server_port: 6443
      path_kubeconfig: /etc/rancher/k3s/k3s.yaml
      create_root_cert: true

      bin:
        cilium:
          bin_name: cilium
          bin_version: "{{ cilium_version }}"
          check_bin_version_before_installing: true
          source_url: "https://github.com/cilium/cilium-cli/releases/download/v{{ cilium_version }}/cilium-linux-amd64.tar.gz"
          bin_to_copy: cilium
          to_remove: ""
          bin_dir: "/usr/bin/cilium"
          version_cmd: "version"
          target_version: "{{ cilium_version }}"
        helm:
          bin_name: "helm"
          bin_version: "{{ helm_version }}"
          check_bin_version_before_installing: true
          source_url: "https://get.helm.sh/helm-v{{ helm_version }}-linux-amd64.tar.gz"
          bin_to_copy: "linux-amd64/helm"
          to_remove: "linux-amd64"
          bin_dir: "/usr/local/bin"
          version_cmd: " version"
          target_version: "{{ helm_version }}"
        kubectl:
          bin_name: "kubectl"
          bin_version: "{{ kubectl_version }}"
          check_bin_version_before_installing: true
          source_url: "https://dl.k8s.io/{{ kubectl_version }}/bin/linux/amd64/kubectl"
          bin_to_copy: "kubectl"
          to_remove: "kubectl"
          bin_dir: "/usr/local/bin"
          version_cmd: " version --client"
          target_version: "{{ kubectl_version }}"
        k9s:
          bin_name: "k9s"
          bin_version: "{{ k9s_version }}"
          check_bin_version_before_installing: true
          source_url: "https://github.com/derailed/k9s/releases/download/{{ k9s_version }}/k9s_Linux_amd64.tar.gz"
          bin_to_copy: "k9s"
          to_remove: "k9s"
          bin_dir: "/usr/local/bin"
          version_cmd: " version --short"
          target_version: "{{ k9s_version }}"

      k3s_config_path: /tmp/k3s-cluster.yaml
      flannel_backend: none
      disable_kube_proxy: true
      disable_network_policy: true
      cluster_init: true
      disable:
        - servicelb
        - traefik

templates:
  - name: k3s
    file: |
      ---
      flannel-backend: {{ flannel_backend }}
      disable-kube-proxy: {{ disable_kube_proxy }}
      disable-network-policy: {{ disable_network_policy }}
      cluster-init: {{ cluster_init }}
      disable:
      {% for item in disable %}
        - {{ item }}
      {% endfor %}