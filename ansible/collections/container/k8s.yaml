---
playbooks:
  - name: k3s_dev_cluster
    play: |
      ---
      - hosts: "{{ target_host | default('all') }}"
        become: true
        gather_facts: true
        vars_files:
          - "{{ path | default('.') }}/{{ profile | default('k3s-dev-config') }}.yaml"

        tasks:
          - name: Create k3s config
            ansible.builtin.template:
              src: k3s-dev-config.yaml
              dest: "{{ k3s_config_path }}"

          - name: Install k3s
            ansible.builtin.shell: |
              curl -sfL https://get.k3s.io | sh -s - --config={{ k3s_config_path }}

  - name: rancher_kubeconfig
    play: |
      ---
      - hosts: "{{ target_host | default('localhost') }}"
        become: false
        gather_facts: false

        vars:
          vault_approle_id: "{{ lookup('env', 'VAULT_ROLE_ID') }}"
          vault_approle_secret: "{{ lookup('env', 'VAULT_SECRET_ID') }}"
          vault_url: "{{ lookup('env', 'VAULT_ADDR') }}"
          rancher_api_secret_path: apps/data/rancher:apiUrl
          rancher_api_accesskey_path: apps/data/rancher:accessKey
          rancher_api_secretkey_path: apps/data/rancher:secretKey
          rancher_api_url: "{{ lookup('community.hashi_vault.hashi_vault', 'secret={{ rancher_api_secret_path }} validate_certs=false auth_method=approle role_id={{ vault_approle_id }} secret_id={{ vault_approle_secret }} url={{ vault_url }}') }}"
          rancher_access_key: "{{ lookup('community.hashi_vault.hashi_vault', 'secret={{ rancher_api_accesskey_path }} validate_certs=false auth_method=approle role_id={{ vault_approle_id }} secret_id={{ vault_approle_secret }} url={{ vault_url }}') }}"
          rancher_secret_key: "{{ lookup('community.hashi_vault.hashi_vault', 'secret={{ rancher_api_secretkey_path }} validate_certs=false auth_method=approle role_id={{ vault_approle_id }} secret_id={{ vault_approle_secret }} url={{ vault_url }}') }}"
          secret_path_kubeconfig: kubeconfigs

          upload_vault: true
          check_kubeconfig: true
          # cluster_name: app-dev-master
          kubeconfig_destination: "/tmp/kubeconfig-{{ cluster_name }}"

        tasks:
          - name: Get cluster information
            ansible.builtin.uri:
              validate_certs: false
              url: "{{ rancher_api_url }}/clusters?name={{ cluster_name }}"
              user: "{{ rancher_access_key }}"
              password: "{{ rancher_secret_key }}"
              body_format: json
              method: GET
              force_basic_auth: yes
              headers:
                Content-Type: "application/json"
            register: cluster_info

          - name: Show clusterid
            ansible.builtin.debug:
              var:
                cluster_info.json.data[0].id

          - name: Get kubeconfig
            ansible.builtin.uri:
              validate_certs: false
              url: "{{ rancher_api_url }}/clusters/{{ cluster_info.json.data[0].id }}?action=generateKubeconfig"
              user: "{{ rancher_access_key }}"
              password: "{{ rancher_secret_key }}"
              body_format: json
              method: POST
              force_basic_auth: yes
            register: kubeconfig

          - name: Store kubeconfig to disk
            ansible.builtin.copy:
              content: "{{ kubeconfig.json.config  }}"
              dest: "{{ kubeconfig_destination }}"

          - name: Test if kubeconfig is valid
            ansible.builtin.shell: |
              kubectl get nodes --kubeconfig {{ kubeconfig_destination }}
            register: cmd_result
            retries: 20
            delay: 30
            until: ("NotReady" not in cmd_result.stdout)
            when: check_kubeconfig|bool

          - name: Write kubeconfig to vault using key value V2 engine
            community.hashi_vault.vault_write:
              auth_method: approle
              url: "{{ vault_url }}"
              role_id: "{{ vault_approle_id }}"
              secret_id: "{{ vault_approle_secret }}"
              validate_certs: false
              path: "{{ secret_path_kubeconfig }}/data/{{ cluster_name }}"
              data:
                data:
                  kubeconfig: "{{ lookup('ansible.builtin.file', kubeconfig_destination)|b64encode }}"
            delegate_to: localhost
            when: upload_vault|bool

  - name: kind
    play: |
      ---
      - hosts: "{{ target_host | default('all') }}"
        become: true
        vars:
          docker_install_compose: true
          install_kind: true
          kind_version: 0.24.0 # datasource=github-tags depName=kubernetes-sigs/kind
          kubectl_version: v1.30.2 # datasource=github-tags depName=kubernetes/kubectl

        roles:
          - role: sthings.container.install_configure_docker

vars:
  - name: k3s_dev_cluster
    file: |
      ---
      flannel_backend: none
      disable_kube_proxy: true
      disable_network_policy: true
      cluster_init: true
      disable:
        - servicelb
        - traefik

templates:
  - name: k3s-dev-config
    file: |
      ---
      k3s_config_path: /tmp/k3s-dev-config.yaml
      flannel-backend: {{ flannel_backend }}
      disable-kube-proxy: {{ disable_kube_proxy }}
      disable-network-policy: {{ disable_network_policy }}
      cluster-init: {{ cluster_init }}
      disable:
      {% for item in disable %}
        - {{ item }}
      {% endfor %}