---
playbooks:
  - name: podman
    play: |
      ---
      - hosts: "{{ target_host | default('all') }}"
        become: true

        roles:
          - role: sthings.container.install_configure_podman

  - name: docker
    play: |
      ---
      - hosts: "{{ target_host | default('all') }}"
        become: true
        vars:
          docker_install_compose: true
          install_kind: false

        roles:
          - role: sthings.container.install_configure_docker

  - name: nerdctl
    play: |
      ---
      - hosts: "{{ target_host | default('all') }}"
        become: true
        vars:
          nerdctl_version: 2.0.1 # datasource=github-tags depName=containerd/nerdctl
          bin:
            nerdctl:
              bin_name: "nerdctl"
              bin_version: "{{ nerdctl_version }}"
              check_bin_version_before_installing: true
              source_url: "https://github.com/containerd/nerdctl/releases/download/v{{ nerdctl_version }}/nerdctl-full-{{ nerdctl_version }}-linux-amd64.tar.gz"
              bin_to_copy: "."
              bin_dir: "/usr/local"
              to_remove: "*"
              version_cmd: " version"
              target_version: v{{ nerdctl_version }}
              md5_checksum: "044b60cec5341a3cde7a091cc2f12aa7"

          systemd_services:
            - containerd
            - buildkit
        roles:
          - role: sthings.container.download_install_binary

        post_tasks:
          - name: Create a directory if it does not exist
            ansible.builtin.file:
              path: $HOME/bin
              state: directory
              mode: 0700

          - name: Copy nerdctl
            ansible.builtin.copy:
              src: "/usr/local/bin/nerdctl"
              dest: "/usr/local/bin"
              mode: 0755
              remote_src: true
              owner: root
            become: true

          - name: give root permissions to nerdctl + export path
            ansible.builtin.shell: |
              chmod +s /usr/local/bin/nerdctl
              export PATH=/usr/local/bin:$PATH

          - name: Put SELinux in permissive mode
            ansible.posix.selinux:
              policy: targeted
              state: permissive
            when: ansible_os_family == 'RedHat'

          - name: Enable systemd services
            ansible.builtin.systemd_service:
              name: "{{ item }}"
              enabled: true
              daemon_reload: true
              state: started
            become: true
            with_items:
              - "{{ systemd_services }}"

          - name: Put SELinux in enforcing mode
            ansible.posix.selinux:
              policy: targeted
              state: enforcing
            when: ansible_os_family == 'RedHat'