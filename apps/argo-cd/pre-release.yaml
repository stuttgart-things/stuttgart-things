---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: argocd-configuration
  namespace: argocd
spec:
  interval: 30m
  chart:
    spec:
      chart: sthings-cluster
      version: 0.3.1
      sourceRef:
        kind: HelmRepository
        name: stuttgart-things
        namespace: argocd
      interval: 12h
  values:
    secrets:
      argocd-vault-plugin-credentials:
        name: argocd-vault-plugin-credentials
        namespace: argocd
        secretKVs:
          AVP_TYPE: vault
          TYPE: vault
          AVP_AUTH_TYPE: approle
          AVP_VAULT_ADDR: ${VAULT_ADDR}
          VAULT_ADDR: ${VAULT_ADDR}
          VAULT_NAMESPACE: ${VAULT_NAMESPACE}
          AVP_ROLE_ID: ${VAULT_ROLE_ID}
          AVP_SECRET_ID: ${VAULT_SECRET_ID}
    customresources:
      argocd-certificate:
        apiVersion: cert-manager.io/v1
        kind: Certificate
        metadata:
          name: argocd-ingress
          namespace: argocd
        spec:
          commonName: ${INGRESS_HOST}
          dnsNames:
          - ${INGRESS_HOST}
          issuerRef:
            name: cluster-issuer-approle
            kind: ClusterIssuer
          secretName: ${INGRESS_SECRET_NAME}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argocd-deployment
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argo-cd-cm
    app.kubernetes.io/part-of: argocd
data:
  admin.enabled: "true"
  application.instanceLabelKey: argocd.argoproj.io/instance
  exec.enabled: "false"
  server.rbac.log.enforce.enable: "false"
  timeout.hard.reconciliation: 0s
  timeout.reconciliation: 180s
  resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
  configManagementPlugins: |
    - name: argocd-vault-plugin
      generate:
        command: ["argocd-vault-plugin"]
        args: ["generate", "./"]
    - name: argocd-vault-plugin-helm
      init:
        command: ["bash", "-c"]
        args: ['helm dependency update']
      generate:
        command: ["bash", "-c"]
        args: ['helm template "${ARGOCD_APP_NAME}" -f <(echo "${ARGOCD_ENV_HELM_VALUES}") --include-crds . -n ${ARGOCD_APP_NAMESPACE} | argocd-vault-plugin generate -']
    - name: argocd-vault-plugin-kustomize
      generate:
        command: ["sh", "-c"]
        args: ["kustomize build . > all.yaml && argocd-vault-plugin generate all.yaml"]