
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: argocd-deployment
  namespace: argocd
spec:
  dependsOn:
    - name: argocd-configuration
      namespace: argocd
  interval: 30m
  chart:
    spec:
      chart: argo-cd
      version: 5.50.0
      sourceRef:
        kind: HelmRepository
        name: argocd
        namespace: argocd
      interval: 12h
  values:
    configs:
      cm:
        create: true
        admin.enabled: "true"
        application.instanceLabelKey: argocd.argoproj.io/instance
        exec.enabled: "false"
        server.rbac.log.enforce.enable: "false"
        timeout.hard.reconciliation: 0s
        timeout.reconciliation: 180s
        resource.customizations.health.argoproj.io_Application: |
              hs = {}
              hs.status = "Progressing"
              hs.message = ""
              if obj.status ~= nil then
                if obj.status.health ~= nil then
                  hs.status = obj.status.health.status
                  if obj.status.health.message ~= nil then
                    hs.message = obj.status.health.message
                  end
                end
              end
              return hs
      cmp:
        create: true
        plugins:
          argocd-vault-plugin:
            generate:
              command: ["argocd-vault-plugin"]
              args: ["generate", "./"]
          argocd-vault-plugin-helm:
            init:
              command: ["bash", "-c"]
              args: ['helm dependency update']
            generate:
              command: ["bash", "-c"]
              args: ['${VAULTPLUGIN_GENERATE_CMD}']
          argocd-vault-plugin-kustomize:
              generate:
                command: ["sh", "-c"]
                args: ["kustomize build . > all.yaml && argocd-vault-plugin generate all.yaml"]
    nameOverride: ""
    repoServer:
      image:
        repository: ${IMAGE_REPOSITORY}
        tag: ${IMAGE_TAG}
      envFrom:
      - secretRef:
          name: argocd-vault-plugin-credentials
    server:
      image:
        repository: ${IMAGE_REPOSITORY} # eu.gcr.io/stuttgart-things/sthings-argocd:v2.7.9
        tag: ${IMAGE_TAG}
      service:
        type: ${SERVICE_TYPE}
      envFrom:
      - secretRef:
          name: argocd-vault-plugin-credentials
      ingress:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        ingressClassName: nginx
        hosts:
          - ${INGRESS_HOSTNAME}.${INGRESS_DOMAIN}
        tls:
          - secretName: ${INGRESS_SECRET_NAME}
            hosts:
              - ${INGRESS_HOSTNAME}.${INGRESS_DOMAIN}
