---
configmaps:
  packer:
    rocky9-vsphere.pkr.hcl: |
      ---
      packer {
        required_version = ">= 1.8.6"
        required_plugins {
          vmware = {
            version = ">= 1.0.7"
            source  = "github.com/hashicorp/vmware"
          }
        }
      }
  
      locals {
        packerstarttime = formatdate("YYYYMMDD", timestamp())
      }
  
      variable "password" {
        type = string
      }
  
      variable "username" {
        type = string
      }
  
      source "vsphere-iso" "autogenerated_1" {
        CPUs                 = 8
        RAM                  = 8192
        RAM_reserve_all      = true
        boot_command         = ["<up><wait5><tab> inst.text inst.repo=cdrom:sr0 inst.ks=cdrom:sr1:/user-data<enter><wait>"]
        boot_order           = "disk,cdrom"
        boot_wait            = "5s"
        cd_files             = ["user-data"]
        cd_label             = "cidata"
        cluster              = "/LabUL/host/Cluster01"
        convert_to_template  = "true"
        datastore            = "/LabUL/datastore/UL-V5010-01-LUN3"
        disk_controller_type = ["pvscsi"]
        folder               = "/phermann/packer"
        guest_os_type        = "centos7_64Guest"
        host                 = "/LabUL/host/Cluster01/10.31.101.41"
        insecure_connection  = "true"
        ip_wait_timeout      = "40m"
        iso_checksum         = "sha256:11e42da96a7b336de04e60d05e54a22999c4d7f3e92c19ebf31f9c71298f5b42"
        iso_urls             = ["https://download.rockylinux.org/pub/rocky/9/isos/x86_64/Rocky-9.2-x86_64-boot.iso"]
        network_adapters {
          network      = "/LabUL/network/LAB-10.31.102"
          network_card = "vmxnet3"
        }
        notes                  = "stuttgart-things/rocky9\n\nBuild Date: ${local.packerstarttime} w/ packer\nOS: rocky9\nISO: https://  download.rockylinux.org/pub/rocky/9/isos/x86_64/Rocky-9.2-x86_64-boot.iso \nProvisioning: plays/packer-provisioning/base-os.  yaml\n\n/Patrick Hermann (patrick.hermann@sva.de)\n/Christian MÃ¼ller (christian.mueller@sva.de)\n/Marcel Zapf (marcel.zapf@sva.  de)\n/Martin Wolf (martin.wolf@sva.de)"
        password               = "${var.password}"
        ssh_handshake_attempts = "900"
        ssh_password           = "ch0coLate"
        ssh_timeout            = "40m"
        ssh_username           = "root"
        storage {
          disk_size             = 15360
          disk_thin_provisioned = true
        }
        username       = "${var.username}"
        vcenter_server = "10.31.101.51"
        vm_name        = "rocky9-base-os"
      }
  
      build {
        sources = ["source.vsphere-iso.autogenerated_1"]
  
        provisioner "shell" {
          inline = ["dnf update -y; dnf install -y python3-dnf cloud-utils-growpart; dnf install -y gdisk python3; shred -u /etc/ssh/  *_key /etc/ssh/*_key.pub; rm -f /var/run/utmp; >/var/log/lastlog; >/var/log/wtmp; >/var/log/btmp; rm -rf /tmp/* /var/tmp/  *; unset HISTFILE; rm -rf /home/*/.*history /root/.*history; rm -f /root/*ks; passwd -d root; passwd -l root; rm -f /etc/  resolv.conf; ln -sf /run/NetworkManager/resolv.conf /etc/resolv.conf; echo manage_PasswordAuthentication ;sed -i 's/  PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config; sed -i 's/#PasswordAuthentication yes/  PasswordAuthentication yes/g' /etc/ssh/sshd_config"]
        }
  
        provisioner "ansible" {
          ansible_env_vars       = ["ANSIBLE_REMOTE_TEMP=/tmp", "ANSIBLE_HOST_KEY_CHECKING=False",   "ANSIBLE_SSH_ARGS=-oForwardAgent=yes -oControlMaster=auto -oControlPersist=60s -oHostKeyAlgorithms=+ssh-rsa   -oPubkeyAcceptedKeyTypes=+ssh-rsa", "ANSIBLE_NOCOLOR=True"]
          extra_arguments        = ["--scp-extra-args", "'-O'"]
          keep_inventory_file    = "true"
          playbook_file          = "./playbook.yml"
          user                   = "root"
        }
      }