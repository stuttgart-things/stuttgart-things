---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: harbor
  labels:
    crossplane.io/xrd: xharbor.resources.stuttgart-things.com
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: resources.stuttgart-things.com/v1alpha1
    kind: XHarbor
  resources:
    - name: harbor-release
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          name: harbor
          annotations:
            crossplane.io/external-name: harbor
        spec:
          providerConfigRef:
            name: in-cluster
          forProvider:
            chart:
              name: docker-harbor
              repository: https://helm.twun.io
              version: 2.2.3
            namespace: harbor
            insecureSkipTLSVerify: false
            skipCreateNamespace: false
            wait: true
            skipCRDs: false
            set:
              - name: secrets.htpasswd
                valueFrom:
                  secretKeyRef:
                    key: HTPASSWD
                    name: harbor
                    namespace: default
            values:
              global:
                storageClass: ${STORAGE_CLASS}
              externalURL: ${INGRESS_HOSTNAME}.${INGRESS_DOMAIN}
              clusterDomain: ${INGRESS_DOMAIN}
              adminPassword: ${HARBOR_ADMIN_PASSWORD}
              exposureType: ingress
              service:
                type: ClusterIP
              ipFamily:
                ipv6:
                  enabled: false
                ipv4:
                  enabled: true
              ingress:
                core:
                  ingressClassName: nginx
                  hostname: ${INGRESS_HOSTNAME}.${INGRESS_DOMAIN}
                  tls: true
                  extraTls:
                    - hosts:
                        - ${INGRESS_HOSTNAME}.${INGRESS_DOMAIN}
                      secretName: ${INGRESS_HOSTNAME}.${INGRESS_DOMAIN}-tls
                  annotations:
                    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
              persistence:
                enabled: true
                resourcePolicy: ''
                persistentVolumeClaim:
                  registry:
                    size: 12Gi
                  trivy:
                    size: 5Gi
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.clusterName
            strategy: string
            string:
              fmt: "harbor-%s"
          toFieldPath: metadata.name
        - fromFieldPath: spec.deploymentNamespace
          toFieldPath: spec.forProvider.namespace
        - fromFieldPath: spec.clusterName
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: spec.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: spec.storageClass
          toFieldPath: spec.forProvider.values.persistence.storageClass
        - fromFieldPath: spec.storageSize
          toFieldPath: spec.forProvider.values.persistence.size
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.hostName
              - fromFieldPath: spec.domainName
            strategy: string
            string:
              fmt: "%s.%s"
          toFieldPath: spec.forProvider.values.ingress.hosts[0]
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.hostName
              - fromFieldPath: spec.domainName
            strategy: string
            string:
              fmt: "%s.%s"
          toFieldPath: spec.forProvider.values.ingress.tls[0].hosts[0]
        - fromFieldPath: spec.cert.secretName
          toFieldPath: spec.forProvider.values.ingress.tls[0].secretName

    - name: harbor-ingresscert
      base:
        apiVersion: resources.stuttgart-things.com/v1alpha1
        kind: XIngressCertificate
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.deploymentNamespace
          toFieldPath: spec.namespace
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterName
          toFieldPath: spec.clusterName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cert.issuerName
          toFieldPath: spec.issuerName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cert.issuerKind
          toFieldPath: spec.issuerKind
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cert.secretName
          toFieldPath: spec.certSecretName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.hostName
          toFieldPath: spec.hostName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.domainName
          toFieldPath: spec.domainName