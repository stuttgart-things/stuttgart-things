name: Rollout GitHub Runner
on:
  pull_request:
    types:
      - opened
      - reopened

jobs:
  Get-Runner-Config:
    if: contains(github.event.pull_request.labels.*.name, 'test')
    container:
      image: eu.gcr.io/stuttgart-things/machineshop:v1.7.2
    runs-on: ghr-stuttgart-things-sthings-cicd
    steps:
      - name: Set Build Details
        id: set
        run: |
          echo "HELLO"

      - name: Comment PR with execution number
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            _(execution **${{ github.run_id }}** / attempt **${{ github.run_attempt }}**)_
          comment_tag: execution

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Hello world ! :wave:

      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: (await github.rest.repos.listPullRequestsAssociatedWithCommit({
                commit_sha: context.sha,
                owner: context.repo.owner,
                repo: context.repo.repo,
              })).data[0].number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })

      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha

      - name: Add Label
        uses: actions/github-script@v6
        #if: ${{ steps.test.outcome }} == 'success'
        with:
          script: |        
            github.rest.issues.addLabels({
              issue_number: ${{ steps.sha.outputs.result }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels[].name: ["ready to merge"]
            }) 
