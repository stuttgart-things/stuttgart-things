name: PR Packer build
on:
  pull_request:
    types:
      - opened
      - reopened

jobs:
  Get-Packer-Config:
    if: contains(github.event.pull_request.labels.*.name, 'packer')
    environment: k8s
    outputs:
      lab: ${{ steps.set.outputs.LAB }}
      cloud: ${{ steps.set.outputs.CLOUD }}
      os-version: ${{ steps.set.outputs.OS_VERSION }}
      build-date: ${{ steps.set.outputs.BUILD_DATE }}
      provisioning: ${{ steps.set.outputs.PROVISIONING }}
      runs-on: ghr-stuttgart-things-skyami-cicd
      build-path: packer/builds
    container:
      image: ghcr.io/stuttgart-things/machineshop/machineshop-9c3178088556daa12a17db5edcc6b5b7@sha256:d815f148f8a69cd5095bcf52a41f9af6f221e4a9bb1836d649c3a94c3db7961e
    runs-on: ghr-stuttgart-things-skyami-cicd
    steps:
      - name: Set Build Details
        id: set
        run: |
          echo "OS_VERSION=$(echo ${{ github.event.pull_request.head.ref }} | cut -d '-' -f 1)" >> "$GITHUB_OUTPUT"
          echo "LAB=$(echo ${{ github.event.pull_request.head.ref }} | cut -d '-' -f 2)" >> "$GITHUB_OUTPUT"
          echo "CLOUD=$(echo ${{ github.event.pull_request.head.ref }} | cut -d '-' -f 3)" >> "$GITHUB_OUTPUT"
          echo "BUILD_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "PROVISIONING=$(echo ${{ github.event.pull_request.head.ref }} | cut -d '-' -f 4)-$(echo ${{ github.event.pull_request.head.ref }} | cut -d '-' -f 5)" >> $GITHUB_OUTPUT

  Build-Packer-Template:
    needs: Get-Packer-Config
    runs-on: ${{ needs.Get-Packer-Config.outputs.runs-on }}
    environment: ${{ needs.Get-Packer-Config.outputs.lab }}-${{ needs.Get-Packer-Config.outputs.cloud }}
    container:
      image: ghcr.io/stuttgart-things/sthings-packer:1.11.2-10.4.0
    outputs:
      output-name: ${{ steps.getTemplateTargetName.outputs.OUTPUT_NAME }}
    env:
      PACKER_LOG_PATH: packer.log
      PACKER_LOG: 1
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_AUTH_METHOD: ${{ secrets.VAULT_AUTH_METHOD }}
      VAULT_NAMESPACE: ${{ secrets.VAULT_NAMESPACE }}
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
    steps:
      - name: Checkout code/branch
        id: checkout
        uses: actions/checkout@v4

      - name: Show app versions
        id: versions
        run: |
          packer --version
          ansible --version

      - name: Packer build
        id: build
        run: |
          SECRET_PATH_USERNAME=$(echo $(yq -r ".userSecretPath" packer/environments/${{ needs.Get-Packer-Config.outputs.lab }}-${{ needs.Get-Packer-Config.outputs.cloud }}.yaml))
          SECRET_PATH_PASSWORD=$(echo $(yq -r ".passwordSecretPath" packer/environments/${{ needs.Get-Packer-Config.outputs.lab }}-${{ needs.Get-Packer-Config.outputs.cloud }}.yaml))

          echo ${SECRET_PATH_USERNAME}
          echo ${SECRET_PATH_PASSWORD}

          cd ${{ needs.Get-Packer-Config.outputs.build-path }}/${{ github.event.pull_request.head.ref }}/
          ls -lta

          packer init $(ls *.hcl)

          packer build -force \
          -var "username=$(machineshop get --path ${SECRET_PATH_USERNAME} | tail -n +9)" \
          -var "password=$(machineshop get --path ${SECRET_PATH_PASSWORD} | tail -n +9)" \
          -var "name=${{ needs.Get-Packer-Config.outputs.os-version }}-${{ needs.Get-Packer-Config.outputs.build-date }}-${{ needs.Get-Packer-Config.outputs.provisioning}}" \
          $(ls *.hcl)

      - name: Get template target name
        id: getTemplateTargetName
        shell: bash
        run: |
          OUTPUT_NAME=$(yq -r ".output.${{ needs.Get-Packer-Config.outputs.os-version }}.${{ needs.Get-Packer-Config.outputs.provisioning }}" packer/environments/${{ needs.Get-Packer-Config.outputs.lab }}-${{ needs.Get-Packer-Config.outputs.cloud }}.yaml)
          echo "OUTPUT_NAME=$(echo ${OUTPUT_NAME})" >> $GITHUB_OUTPUT

      - name: Upload Packer logfile
        id: upload
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ needs.Get-Packer-Config.outputs.lab }}-${{ needs.Get-Packer-Config.outputs.cloud }}-${{ needs.Get-Packer-Config.outputs.os-version }}-${{ needs.Get-Packer-Config.outputs.build-date }}
          path: packer/builds/${{ github.event.pull_request.head.ref }}/packer.log

      - name: Create homerun notification artifact
        id: homerun
        run: |
          echo "---" >> homerun.yaml
          echo "title: PullRequest for Creating Packer Test-VM ${{ inputs.os-version }}-${{ inputs.lab }}-${{ inputs.cloud }} created on github" >> homerun.yaml
          echo "system: github" >> homerun.yaml
          echo "message: 'BUILD-DURATION: TO ADD REPOSITORY: ${GITHUB_REPOSITORY} WORKFLOW: ${GITHUB_WORKFLOW} ARTIFACT: ${{ inputs.os-version }}-${{ inputs.lab }}-${{ inputs.cloud }} RUNNER_NAME: ${RUNNER_NAME} WORKFLOW-IMAGE: ${{ inputs.kaniko-image }} ENV: k8s'" >> homerun.yaml
          echo "tags: packer, github-actions" >> homerun.yaml
          echo "author: ${GITHUB_ACTOR}" >> homerun.yaml
          echo "severity: SUCCESS" >> homerun.yaml
          echo "assignee: ${GITHUB_ACTOR}" >> homerun.yaml
          echo "assigneeUrl: ''" >> homerun.yaml
          echo "artifacts: ${{ inputs.os-version }}-${{ inputs.lab }}-${{ inputs.cloud }}-${{ inputs.ansible-provisioning }}" >> homerun.yaml
          echo "url: ''" >> homerun.yaml

          cat homerun.yaml

      - name: Upload homerun notification artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: homerun
          path: |-
            homerun.yaml

  Send-Homerun-Notification:
    name: Send-Homerun-Notification
    uses: stuttgart-things/stuttgart-things/.github/workflows/call-homerun-notification.yaml@main
    needs:
      - Get-Packer-Config
      - Build-Packer-Template
    with:
      notification-artifact: homerun
      runs-on: ghr-stuttgart-things-skyami-cicd
      environment-name: k8s
      machineshop-image: ghcr.io/stuttgart-things/machineshop/machineshop-9c3178088556daa12a17db5edcc6b5b7@sha256:5e0a8cc6701035f49d8ec7831be05655dfa9df3e54d8e2aaa16142049f34f9c5
      continue-on-error: true
    secrets: inherit

  Update-Packer-PullRequest:
    needs:
      - Get-Packer-Config
      - Build-Packer-Template
    environment: k8s
    container:
      image: ghcr.io/stuttgart-things/machineshop/machineshop-9c3178088556daa12a17db5edcc6b5b7@sha256:d815f148f8a69cd5095bcf52a41f9af6f221e4a9bb1836d649c3a94c3db7961e
    runs-on: ${{ needs.Get-Packer-Config.outputs.runs-on }}
    steps:
      - name: Checkout code/branch
        id: checkout
        uses: actions/checkout@v4

      - name: Get token for creating pull request
        uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.PULLREQUESTER_APP_ID }}
          private_key: ${{ secrets.PULLREQUESTER_APP_KEY }}

      - name: Comment template name to PR
        uses: thollander/actions-comment-pull-request@v2.5.0
        with:
          message: |
            :wave: successful build of vm template: ${{ needs.Get-Packer-Config.outputs.os-version }}-${{ needs.Get-Packer-Config.outputs.build-date }}-${{ needs.Get-Packer-Config.outputs.provisioning }}

      - name: Comment test-vm path to PR
        uses: thollander/actions-comment-pull-request@v2.5.0
        with:
          message: |
            :wave: test vm path: ${{ needs.Get-Packer-Config.outputs.build-path }}/${{ github.event.pull_request.head.ref }}/test-vm

      - name: Comment output name to pr
        uses: thollander/actions-comment-pull-request@v2.5.0
        with:
          message: |
            :wave: output name: ${{ needs.Build-Packer-Template.outputs.output-name }}

      - name: Remove packer label from PR
        uses: actions/github-script@4020e461acd7a80762cdfff123a1fde368246fa4
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            await github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ["packer"]
            })

      - name: Add build test-vm label to PR
        uses: actions/github-script@4020e461acd7a80762cdfff123a1fde368246fa4
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["test-vm"]
            })

      - name: Repoen PR for triggering next step
        id: reopen
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          git config --global --add safe.directory /__w/stuttgart-things/stuttgart-things
          gh pr list
          gh pr close ${{ github.event.pull_request.number }}
          gh pr reopen ${{ github.event.pull_request.number }}
