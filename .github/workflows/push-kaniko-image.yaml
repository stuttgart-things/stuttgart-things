---
name: Build Container Image w/ kaniko
on:
  push:
    branches:
      - "*"
    paths:
      - 'images/*/*'

  pull_request:
    paths:
      - 'images/*/*'

jobs:
  Get-Changed-Dockerfiles:
    runs-on: ghr-stuttgart-things-labda-test
    container:
      image: eu.gcr.io/stuttgart-things/machineshop:v1.7.2-2
    environment: k8s
    outputs:
      constructed: ${{ steps.json.outputs.constructed }}
      hardcoded: ${{ steps.json.outputs.hardcoded }}
      matrix: ${{ steps.prepare.outputs.json }}
    continue-on-error: false
    steps:
      - name: Checkout code
        id: git
        uses: actions/checkout@v4.1.7
        with:
          path: source
          fetch-depth: '0'

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          since_last_remote_commit: true
          path: source
          files: |
            images/*/*

      - name: List all changed files
        id: json
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          set -x

          changed_image_dirs=()

          for path in ${ALL_CHANGED_FILES}; do
            echo "$path was changed"
            image_context=${path%/*}
            image_context=${image_context##*/}
            image_path=$(printf '%s\n' "$image_context")
            changed_image_dirs+=("$image_path")
          done

          echo "DIRS=${changed_image_dirs}" >> $GITHUB_ENV

          hardcoded='{ "context-path": ["sthings-alpine", "sthings-minio"] }'
          echo hardcoded: ${build_contexts_test}

          echo "hardcoded=$hardcoded" >> "$GITHUB_OUTPUT"

          part1=$(printf {)
          part2=$(printf context-path: )
          part3=$(jq -c -n '$ARGS.positional' --args "${changed_image_dirs[@]}")
          part4=$(printf })

          build_contexts_test=$(echo ${part1} ${part2} ${part3} ${part4})
          echo constructed: ${build_contexts_test}
          echo "constructed=${build_contexts_test} | sed 's/,/, /g'" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Prepare matrix JSON Object
        id: prepare
        uses: nickofthyme/object-remap@v2.0.0
        with:
          __case: upper
          __deep_casing: true
          my_key.deep: '{ "myObjectKey": { "nestedKey": 1 }}'

          # __case: kebab
          # dirs: ${{ env.DIRS }}

  Test:
    needs: Get-Changed-Dockerfiles
    runs-on: ghr-stuttgart-things-labda-test
    container:
      image: eu.gcr.io/stuttgart-things/machineshop:v1.7.2-2
    environment: k8s
    continue-on-error: false
    steps:
      - name: Echo
        run: |
          echo ${{ needs.Get-Changed-Dockerfiles.outputs.constructed }}
          echo ${{ needs.Get-Changed-Dockerfiles.outputs.hardcoded }}

  Build-Images:
    needs: Get-Changed-Dockerfiles
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.Get-Changed-Dockerfiles.outputs.hardcoded) }}
    uses: stuttgart-things/stuttgart-things/.github/workflows/call-kaniko-build.yaml@main
    with:
      runs-on: ghr-stuttgart-things-labda-test
      environment-name: k8s
      dockerfile: images/${{ matrix.context-path }}/Dockerfile
      registry: ghcr.io
      repository: stuttgart-things
      image: ${{ matrix.context-path }}
      tag: latest
      kaniko-image: gcr.io/kaniko-project/executor
      kaniko-tag: debug
      push-retrys: "5"