---
name: Build Container Image
on:
  pull_request:
    types:
      - opened
      - reopened
    paths:
      - 'images/*/*'

jobs:
  Get-Changed-Dockerfiles:
    runs-on: ghr-stuttgart-things-labul-automation
    container:
      image: ghcr.io/stuttgart-things/machineshop/machineshop-9c3178088556daa12a17db5edcc6b5b7:1.9.10
    environment: labul-vsphere #k8s
    outputs:
      contexts: ${{ steps.json.outputs.contexts }}
    continue-on-error: false
    steps:
      - name: Checkout code
        id: git
        uses: actions/checkout@v4.1.7
        with:
          path: source
          fetch-depth: '0'

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          since_last_remote_commit: true
          path: source
          files: |
            images/*/*
          dir_names: false

      - name: Get all changed contexts
        id: json
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          # LOOP OVER ALL CHANGED PATHS FOR GETTING CONTEXT DIRS

          changed_image_dirs=()
          for path in ${ALL_CHANGED_FILES}; do
            echo "$path was changed"
            image_context=${path%/*}
            image_context=${image_context##*/}
            image_path=$(printf '%s\n' "$image_context")
            changed_image_dirs+=("$image_path")
          done

          # GET ALL CHANGED PATHS AS COMMA SEPERATED STRING
          changed_contexts=$(echo ${changed_image_dirs[@]// /,})
          changed_contexts=$(echo ${changed_contexts//[[:blank:]]/,})

          # SET CONTEXTS AS JSON
          contexts=$(echo "\"${changed_contexts}\"" | sed 's/,/", "/g')
          JSON_CONTEXTS='{ "context-path": ['"${contexts}"'] }'
          echo $JSON_CONTEXTS
          echo "contexts=$JSON_CONTEXTS" >> "$GITHUB_OUTPUT"
        shell: bash

  Build-Image:
    needs: Get-Changed-Dockerfiles
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.Get-Changed-Dockerfiles.outputs.contexts) }}
    uses: stuttgart-things/stuttgart-things/.github/workflows/call-kaniko-build.yaml@main
    with:
      runs-on: ghr-stuttgart-things-labul-automation
      environment-name: labul-vsphere
      registry-config: images/dev-registries.yaml
      dockerfile: Dockerfile
      context: git://github.com/stuttgart-things/stuttgart-things
      kaniko-image: eu.gcr.io/stuttgart-things/sthings-container:1.23.2
      context-sub-path: images/${{ matrix.context-path }}
    secrets: inherit

  Scan-Image:
    needs: Build-Image
    strategy:
      fail-fast: false
      matrix:
        image: ["python:3.4-alpine", "nginx:latest"]
    uses: stuttgart-things/stuttgart-things/.github/workflows/call-trivy-scan.yaml@main
    with:
      runs-on: ghr-stuttgart-things-labul-automation
      environment-name: labul-vsphere
      kind: image
      object: ${{ matrix.image }}
      trivy-image: eu.gcr.io/stuttgart-things/sthings-container:1.23.2
    secrets: inherit

  # Send-Homerun-Notification:
  #   if: ${{ always() }}
  #   needs: Scan-Image
  #     runs-on: ghr-stuttgart-things-labul-automation
  #   environment-name: labul-vsphere
  #   container:
  #     image: hashicorp/terraform:1.6
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     with:
  #       path: "./tests"
