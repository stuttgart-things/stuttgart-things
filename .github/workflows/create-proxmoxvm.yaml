---
name: Create ProxmoxVM
on:
  workflow_dispatch:
    inputs:
      count-vm:
        type: choice
        description: COUNT OF VMS
        options:
          - 1
          - 2
          - 3
          - 4
          - 5
      vm-name:
        required: true
        type: string
      vm-cpu:
        type: choice
        description: COUNT OF CPUS
        options:
          - 2
          - 4
          - 6
          - 8
      vm-memory:
        type: choice
        description: MEMORY OF VM
        options:
          - 2048
          - 4096
          - 6144
          - 8196
      vm-disk:
        type: choice
        description: SIZE OF DISK
        options:
          - 20
          - 32
          - 64
          - 96
          - 128
      vm-template:
        type: choice
        description: TEMPLATE OF VM
        options:
          - ubuntu22
          - rocky9
      vm-network:
        type: choice
        description: NETWORK OF VM
        options:
          - vmbr102
          - vmbr103
      vm-datastore:
        type: choice
        description: DATASTORE OF VM
        options:
          - v3700
      vm-folder:
        type: string
        description: FOLDER ON PVE
        default: stuttgart-things

env:
  # DESTINATION_DIR: crossplane/labul/pve/
  TEMPLATE_NAME: proxmoxvm.yaml
  TEMPLATE_PATH: crossplane/claims

jobs:
  Create-VM-Config:
    permissions:
      contents: write
      pull-requests: write
    runs-on: arc-runner-scale-set-stuttgart-things
    environment: k8s
    container:
      image: eu.gcr.io/stuttgart-things/machineshop:v0.1.53-git
    continue-on-error: false
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4.1.1

      - name: Create vm config
        id: config
        run: |
          echo 'countVM: ${{ inputs.count-vm }}' >> ./${{ inputs.vm-name }}.yaml
          echo 'vmName: ${{ inputs.vm-name }}' >> ./${{ inputs.vm-name }}.yaml
          cat ${{ inputs.vm-name }}.yaml

      - name: Upload linting results
        id: upload
        uses: actions/upload-artifact@v4.1.0
        with:
          name: ${{ inputs.vm-name }}
          path: ${{ inputs.vm-name }}.yaml

  # Create-Proxmox-Vm:
  #   name: Release Golang
  #   uses: stuttgart-things/stuttgart-things/.github/workflows/on-call/render-pr-vm.yaml@main
  #   with:
  #     environment-name: k8s
  #     runs-on: arc-runner-scale-set-stuttgart-things
  #   secrets: inherit


# jobs:
#   Create-VM-Config:
#     permissions:
#       contents: write
#       pull-requests: write
#     runs-on: arc-runner-scale-set-stuttgart-things
#     container:
#       image: eu.gcr.io/stuttgart-things/machineshop:v0.1.53-git
#     environment: k8s
#     continue-on-error: false
#     steps:
      # - name: Checkout code
      #   id: checkout
      #   uses: actions/checkout@v4.1.1

      # - name: Create vm config
      #   id: config
      #   run: |
      #     ls -lta
      #     machineShop version
      #     git config --global --add safe.directory '*'

      #     machineShop render \
      #     --source local \
      #     --template ${TEMPLATE_PATH}/${TEMPLATE_NAME} \
      #     --values "vmCount=${{ inputs.count-vm }}, vmName=${{ inputs.vm-name }}, vmCpu=${{ inputs.vm-cpu }}, vmMem=${{ inputs.vm-memory }}, vmDisk=${{ inputs.vm-disk }}, vmTemplate=${{ inputs.vm-template }}, vmNetwork=${{ inputs.vm-network }}, vmDatastore=${{ inputs.vm-datastore }}, vmFolder=${{ inputs.vm-folder }}, vmNode=${{ inputs.vm-node }}" \
      #     --output file \
      #     --destination "clusters/${{ inputs.vm-name }}.yaml"

      # - name: Create Pull Request
      #   id: pr
      #   uses: peter-evans/create-pull-request@v6.0.1
      #   with:
      #     commit-message: '[CI][CROSSPLANE] - Created vmconfig'
      #     title: 'Created crossplane vmconfig'
      #     branch: ${{ inputs.vm-name }}
