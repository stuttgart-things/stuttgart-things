---
name: Docker Buildx Build
on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string
        default: docker
      environment-name:
        default: k8s
        required: false
        type: string
      push:
        default: true
        type: boolean
        required: false
      context-path:
        required: false
        default: "."
        type: string
      image-destination:
        required: false
        type: string
        default: ""
      image-tag:
        required: false
        type: string
        default: "latest"
      registry-config:
        required: false
        default: images/dev-registries.yaml
        type: string

jobs:
  buildx-build-push:
    runs-on: ${{ inputs.runs-on }}
    environment: ${{ inputs.environment-name }}
    env:
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_AUTH_METHOD: ${{ secrets.VAULT_AUTH_METHOD }}
      VAULT_NAMESPACE: ${{ secrets.VAULT_NAMESPACE }}
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
      # DESTINATION: ${{ inputs.image-destination }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install machineshop
        shell: bash
        id: setup
        run: |
          VERSION=2.6.2
          wget https://github.com/stuttgart-things/machineshop/releases/download/${VERSION}/machineshop_Linux_x86_64.tar.gz
          tar xvfz machineshop_Linux_x86_64.tar.gz
          sudo mv machineshop /usr/bin/machineshop
          rm -rf LICENSE README.md
          sudo chmod +x /usr/bin/machineshop
          machineshop version

      - name: Login into registry
        shell: bash
        if: ${{ !contains(env.DESTINATION, 'ghcr.io') }} && ${{ inputs.push }}
        id: login
        run: |
          if [[ "${{ inputs.image-destination }}" != *"ghcr.io"* ]] && [[ "${{ inputs.push }}" == "true" ]]; then
              REGISTRY_URL=$(yq -r ".build.reg.url" ${{ inputs.registry-config }})
              vault_username_path=$(yq -r ".build.reg.username" ${{ inputs.registry-config }})
              vault_password_path=$(yq -r ".build.reg.password" ${{ inputs.registry-config }})

              docker login ${REGISTRY_URL} \
              --username $(machineshop get --path ${vault_username_path} | tail -n +9) \
              --password $(machineshop get --path ${vault_password_path} | tail -n +9)
          fi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        if: contains(inputs.image-destination, 'ghcr.io') && ${{ inputs.push }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }} ## GitHub organization or username
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context-path }}
          push: ${{ inputs.push }}
          tags: ${{ inputs.image-destination }}:${{ inputs.image-tag }}