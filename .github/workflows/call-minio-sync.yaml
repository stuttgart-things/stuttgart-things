---
name: Call Minio Sync
on:
  workflow_call:
    inputs:
      files:
        required: true
        type: string
      bucket:
        required: true
        type: string
      branch:
        required: false
        type: string
        default: main
      action:
        required: false
        default: copy # or sync
        type: string
      s3-instance-profiles:
        required: true
        type: string
      environment:
        required: true
        type: string
      runs-on:
        description: RUNNER NAME
        required: true
        type: string
      image:
        required: false
        type: string
        default: eu.gcr.io/stuttgart-things/sthings-mc-rclone:2024-05-14

jobs:
  Upload-Content-To-S3:
    name: Upload content to s3
    runs-on: ${{ inputs.runs-on }}
    container:
      image: ${{ inputs.image }}
    environment: ${{ inputs.environment }}
    env:
      S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
    continue-on-error: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          ref: ${{ inputs.branch }}

      - name: Copy files to s3 Bucket
        if: ${{ inputs.action == 'sync' }}
        run: |
          files=$(echo ${{ inputs.files }})

          for instance in $(yq eval -o=j ${{ inputs.s3-instance-profiles }} | jq -cr '.instances[]'); do

            ALIAS=$(echo $instance | jq -r '.name' -)
            URL=$(echo $instance | jq -r '.url' -)
            VAULT_PATH_USERNAME=$(echo $instance | jq -r '.username' -)
            VAULT_PATH_PASSWORD=$(echo $instance | jq -r '.password' -)

            mc alias set ${ALIAS} ${URL} $(machineshop get --path ${VAULT_PATH_USERNAME} | tail -n +8) $(machineshop get --path ${VAULT_PATH_PASSWORD} | tail -n +8)
            echo "copy to ${URL}:${{ inputs.bucket }}"

            for file in ${files//,/ }
            do
                echo ${file}
            done

          done

      - name: Sync files to s3 Bucket
        if: ${{ inputs.action == 'sync' }}
        run: |
          export AWS_ACCESS_KEY_ID=$S3_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY=$S3_SECRET_ACCESS_KEY
          echo ${AWS_ACCESS_KEY_ID}

          mkdir -p ${HOME}/.config/rclone/
          touch ${HOME}/.config/rclone/rclone.conf

          cat ${HOME}/.config/rclone/rclone.conf

          cat <<EOF > ${HOME}/.config/rclone/rclone.conf
          [${{ inputs.s3-alias }}]
          type = s3
          provider = Minio
          env_auth = true
          endpoint = ${{ inputs.endpoint }}
          acl = private
          region = us-central-1
          EOF

          cat ${HOME}/.config/rclone/rclone.conf

          # CLEAN FOLDER
          rclone delete ${{ inputs.s3-alias }}:${{ inputs.bucket }}/${{ inputs.folder }}/${{ inputs.site-name }}

          # COPY CONTENT TO S3
          rclone -P copy ${{ inputs.folder }} ${{ inputs.s3-alias }}:${{ inputs.bucket }}/${{ inputs.folder }}/${{ inputs.site-name }}

          rclone ls ${{ inputs.s3-alias }}:${{ inputs.bucket }}/${{ inputs.folder }}/${{ inputs.site-name }}
