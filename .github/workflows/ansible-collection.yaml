---
name: Build ansible collection
on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string
      environment-name:
        default: k8s
        required: true
        type: string
      ansible-image:
        default: eu.gcr.io/stuttgart-things/sthings-ansible:9.3.0-1
        type: string
        required: false
      continue-error:
        default: false
        required: true
        type: boolean
      collection-file:
        default: "./collection.yaml"
        required: false
        type: string
    outputs:
      collection-version:
        description: version of ansible collection
        value: ${{ jobs.Ansible-Collection-Build.outputs.version }}
      artifact-name:
        description: name of uploaded ansible collection package
        value: ${{ jobs.Ansible-Collection-Build.outputs.artifact }}
        
jobs:
  Ansible-Collection-Build:
    outputs:
      version: ${{ steps.version.outputs.version }}
      artifact: ${{ steps.build.outputs.artifact }}
    runs-on: ${{ inputs.runs-on }}
    container:
      image: ${{ inputs.ansible-image }}
    environment: ${{ inputs.environment-name }}
    continue-on-error: ${{ inputs.continue-error }}
    steps:
      - name: Checkout code
        id: git
        uses: actions/checkout@v4.1.1
        with:
          path: source
          fetch-depth: '0'

      - id: version
        run: echo "version=$(yq -r '.version' source/${{ inputs.collection-file }})" >> "$GITHUB_OUTPUT"
        shell: bash
        
      - name: Init collection
        id: init
        run: |
          echo 'READ COLLECTION FILE'
          cat source/${{ inputs.collection-file }}
          yq -r ".requirements" source/${{ inputs.collection-file }} > ./roles.yaml

          echo 'INIT COLLECTION'
          ansible-galaxy collection init $(yq -r ".namespace" source/${{ inputs.collection-file }}).$(yq -r ".name" source/${{ inputs.collection-file }})

          # SET WORKING DIRS AS ENV-VARS
          echo "COLLECTION_NAME=$(yq -r ".name" source/${{ inputs.collection-file }})" >> $GITHUB_ENV
          echo "COLLECTION_NAMESPACE=$(yq -r ".namespace" source/${{ inputs.collection-file }})" >> $GITHUB_ENV
          echo "COLLECTION_FILEPATH=source/${{ inputs.collection-file }}" >> $GITHUB_ENV
          echo "COLLECTION_ROLES_DIR=$GITHUB_WORKSPACE/$(yq -r ".namespace" source/${{ inputs.collection-file }})/$(yq -r ".name" source/${{ inputs.collection-file }})/roles" >> $GITHUB_ENV
          echo "COLLECTION_DIR=$GITHUB_WORKSPACE/$(yq -r ".namespace" source/${{ inputs.collection-file }})/$(yq -r ".name" source/${{ inputs.collection-file }})" >> $GITHUB_ENV

      - name: Install roles into collection
        id: roles
        run: |
          echo 'INSTALL ROLES INTO COLLECTION'
          ansible-galaxy install -r ./roles.yaml -p ${{ env.COLLECTION_ROLES_DIR }}

      - name: Change role references
        id: role-refs
        run: |
          for role in "${{ env.COLLECTION_ROLES_DIR }}"/*
          do
            # SET/ECHO ROLE NAMES
            collection_role_name=$(echo "$( basename $role)" | tr - _)
            echo existing role names: $(basename $role)
            echo "collection role names: $collection_role_name"

            # GET ALL FILES IN ROLE
            all_files_role=$(find ${{ env.COLLECTION_ROLES_DIR }}/$(basename $role) -type f)
            echo all_files_role: $all_files_role

            echo REPLACE ALL ROLE REFERENCES
            sed -i "s/$(basename $role)/${collection_role_name}/g" $all_files_role

            echo RENAME ROLE DIR
            mv ${{ env.COLLECTION_ROLES_DIR }}/$(basename $role) ${{ env.COLLECTION_ROLES_DIR }}/$collection_role_name
          done

          ls -lta ${{ env.COLLECTION_ROLES_DIR }}

      - name: Rewrite role includes
        id: rewrite-role-includes
        run: |
          # SET ROLES DIR
          ROLES_DIR=$(ls ${{ env.COLLECTION_ROLES_DIR }})

          # LOOP OVER ALL ROLES
          for ROLE in ${ROLES_DIR};
            do

            echo CHECKING: ${ROLE}

              for ROLE_NAME in ${ROLES_DIR};

                do
                  OLD_ROLE_NAME=$(echo ${ROLE} | tr _ -)
                  NEW_ROLE_NAME=$(echo ${{ env.COLLECTION_NAMESPACE }}.${{ env.COLLECTION_NAME }}.${ROLE})

                  echo OLD ROLE NAME: $OLD_ROLE_NAME
                  echo NEW ROLE NAME: $NEW_ROLE_NAME

                  ls ${{ env.COLLECTION_ROLES_DIR }}/${ROLE_NAME}/tasks

                  # FIND FILES
                  find ${{ env.COLLECTION_ROLES_DIR }}/${ROLE_NAME}/tasks -type f

                  # REPLACE
                  sed -i "s/${OLD_ROLE_NAME}/${NEW_ROLE_NAME}/g" $(find ${{ env.COLLECTION_ROLES_DIR }}/${ROLE_NAME}/tasks -type f)
              done
          done

      - name: Adding playbooks
        id: plays
        run: |
          play_dir=${{ env.COLLECTION_DIR }}/playbooks
          mkdir -p ${play_dir}

          # GET COUNT OF ALL KEYS OF SUBKEY PLAYBOOKS
          count_plays=$(yq '.playbooks | keys' ${{ env.COLLECTION_FILEPATH }} | wc -l)
          echo FOUND $count_plays PLAYBOOKS FOR THIS COLLECTION

          COUNTER=0
          while [ $COUNTER != $count_plays ]; do
             echo PROCESS PLAYBOOK: $COUNTER

             # GET PLAYBOOK NAME AND CONTENT
             yq ".playbooks[$COUNTER].name" ${{ env.COLLECTION_FILEPATH }}
             filename=$(yq ".playbooks[$COUNTER].name" ${{ env.COLLECTION_FILEPATH }})
             play_content=$(yq ".playbooks[$COUNTER].play" ${{ env.COLLECTION_FILEPATH }})

             # CREATE PLAYBOOK ON FS
             echo "$play_content" > "${play_dir}/${filename}.yaml"
             let COUNTER=COUNTER+1
          done

          # LIST CREATED PLAYS
          ls -lta ${play_dir}

      - name: Build collection
        id: build
        run: |
          echo 'BUILD COLLECTION'
          ansible-galaxy collection build ${{ env.COLLECTION_DIR }}
          echo "COLLECTION_PACKAGE=$(ls -t *.gz | head -1)" >> $GITHUB_ENV
          echo "COLLECTION_PACKAGE_PATH=$PWD/$(ls -t *.gz | head -1)" >> $GITHUB_ENV
          echo "artifact=$(ls -t *.gz | head -1)"  >> $GITHUB_OUTPUT

      - name: Upload collection
        id: upload
        uses: actions/upload-artifact@v4.1.0
        with:
          name: ${{ env.COLLECTION_PACKAGE }}
          path: ${{ env.COLLECTION_PACKAGE_PATH }}

      - name: Release module
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: ncipollo/release-action@v1.14.0
        with:
          name: ${{ env.COLLECTION_PACKAGE }}
          artifacts: ${{ env.COLLECTION_PACKAGE_PATH }}
          body: ${{ env.COLLECTION_PACKAGE }}
          tag: 1.2.6 #${{ needs.Build-Collection.outputs.collection-version }}
          
