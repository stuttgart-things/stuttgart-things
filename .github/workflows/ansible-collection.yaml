---
name: Build ansible collection
on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string
      environment-name:
        default: k8s
        required: true
        type: string
      ansible-image:
        default: eu.gcr.io/stuttgart-things/sthings-ansible:9.3.0-1
        type: string
        required: false
      continue-error:
        default: false
        required: true
        type: boolean
      collection-file:
        default: "./collection.yaml"
        required: false
        type: string

jobs:
  Ansible-Collection-Build:
    runs-on: ${{ inputs.runs-on }}
    container:
      image: ${{ inputs.ansible-image }}
    environment: ${{ inputs.environment-name }}
    continue-on-error: ${{ inputs.continue-error }}
    steps:
      - name: Checkout code
        id: git
        uses: actions/checkout@v4.1.1
        with:
          path: source
          fetch-depth: '0'
          
      - name: Init collection
        id: init
        run: |
          echo 'READ COLLECTION FILE'
          cat source/${{ inputs.collection-file }}
          yq -r ".requirements" source/${{ inputs.collection-file }} > ./roles.yaml

          echo 'INIT COLLECTION'
          ansible-galaxy collection init $(yq -r ".namespace" source/${{ inputs.collection-file }}).$(yq -r ".name" source/${{ inputs.collection-file }})

          # SET WORKING DIRS AS ENV-VARS
          echo "COLLECTION_ROLES_DIR=$GITHUB_WORKSPACE/$(yq -r ".namespace" source/${{ inputs.collection-file }})/$(yq -r ".name" source/${{ inputs.collection-file }})/roles" >> $GITHUB_ENV
          echo "COLLECTION_DIR=$GITHUB_WORKSPACE/$(yq -r ".namespace" source/${{ inputs.collection-file }})/$(yq -r ".name" source/${{ inputs.collection-file }})" >> $GITHUB_ENV

      - name: Install roles into collection
        id: roles
        run: |
          echo 'INSTALL ROLES INTO COLLECTION'
          ansible-galaxy install -r ./roles.yaml -p ${{ env.COLLECTION_ROLES_DIR }}
          
      - name: Change role references
        id: role-refs
        run: |
          for role in "${{ env.COLLECTION_ROLES_DIR }}"/*
          do
            # SET/ECHO ROLE NAMES
            collection_role_name=$(echo "$( basename $role)" | tr - _)
            echo existing role names: $(basename $role)       
            echo "collection role names: $collection_role_name"

            # GET ALL FILES IN ROLE
            all_files_role=$(find ${{ env.COLLECTION_ROLES_DIR }}/$(basename $role) -type f)
            echo all_files_role: $all_files_role

            echo REPLACE ALL ROLE REFERENCES
            sed -i "s/$(basename $role)/${collection_role_name}/g" $all_files_role

            echo RENAME ROLE DIR
            mv ${{ env.COLLECTION_ROLES_DIR }}/$(basename $role) ${{ env.COLLECTION_ROLES_DIR }}/$collection_role_name
          done

          ls -lta ${{ env.COLLECTION_ROLES_DIR }}
          
      - name: Build collection
        id: build
        run: |
          echo 'BUILD COLLECTION'
          ansible-galaxy collection build ${{ env.COLLECTION_DIR }}
          echo "COLLECTION_PACKAGE=$(ls -t *.gz | head -1) >> $GITHUB_ENV
          echo "COLLECTION_PACKAGE_PATH=$GITHUB_WORKSPACE/$(ls -t *.gz | head -1) >> $GITHUB_ENV

      - name: Test collection
        id: test
        run: |
          du -sh ${{ env.COLLECTION_PACKAGE }}
          echo ${{ env.COLLECTION_PACKAGE_PATH }}
          
      - name: Upload collection
        id: upload
        uses: actions/upload-artifact@v4.1.0
        with:
          name: ${{ env.COLLECTION_PACKAGE }}
          path: ${{ github.workspace }}/${{ env.COLLECTION_PACKAGE }}
