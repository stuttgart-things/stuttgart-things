---
name: Dispatch Flux Apps
on:
  workflow_dispatch:
    inputs:
      lab:
        type: choice
        description: LAB
        options:
          - labul
          - labda
          - labul
      cloud:
        type: choice
        description: CLOUD
        options:
          - vsphere
          - proxmox
      cluster-name:
        required: true
        type: string
      infra-apps:
        description: INFRA (APP) NAMES - AS DELMITED STRING BY SEMICOLON
        required: false
        type: string
        default: ""
      infra-values:
        description: INFRA VALUES
        required: false
        type: string
        default: ""
      environment-name:
        type: choice
        description: ENVIRONMENT
        options:
          - k8s
          - labul-vsphere
          - labda-vsphere
          - labul-proxmox
      working-image:
        description: WORKING IMAGE
        type: string
        default: ghcr.io/stuttgart-things/machineshop/machineshop-9c3178088556daa12a17db5edcc6b5b7@sha256:0aa1134306ca79c47141f05ede01afb373dcea3aab76175ac897b6b89ce4342c
      runner:
        description: RUNNER NAME
        required: true
        type: string
        default: ghr-stuttgart-things-labul-automation

jobs:
  Create-Flux-Apps:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ${{ inputs.runner }}
    environment: ${{ inputs.environment-name }}
    container:
      image: ${{ inputs.working-image }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    continue-on-error: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: '0'

      - name: Set config variables
        id: set
        run: |
          echo FLUX_CLUSTER_FOLDER="clusters/${{ inputs.lab }}/${{ inputs.cloud }}/${{ inputs.cluster-name }}" >> $GITHUB_ENV
          echo FLUX_TEMPLATE_DIR="clusters/config" >> $GITHUB_ENV
          echo FLUX_APPS_TEMPLATE="apps.yaml.tpl" >> $GITHUB_ENV
          echo FLUX_INFRA_TEMPLATE="infra.yaml.tpl" >> $GITHUB_ENV
          echo FLUX_DEFAULTS="defaults.yaml" >> $GITHUB_ENV
          mkdir -p /tmp/flux
          echo FLUX_TMP_DIR="/tmp/flux" >> $GITHUB_ENV

      - name: Render infra apps
        id: renderInfraApps
        if: github.event.inputs.infra-apps != ''
        run: |
          infra_apps=$(echo "${{ inputs.infra-apps }}" | tr -d ' ')
          IFS=';'

          for infra in $infra_apps; do

            echo "RENDERING INFRA-APP: ${infra}"

            machineshop render \
            --source local \
            --template ${{ env.FLUX_TEMPLATE_DIR }}/${{ env.FLUX_INFRA_TEMPLATE }} \
            --defaults ${{ env.FLUX_TEMPLATE_DIR }}/${{ env.FLUX_DEFAULTS }} \
            --values "${{ inputs.infra-values }}" \
            --kind multikey \
            --key ${infra} \
            --output file \
            --destination "${{ env.FLUX_TMP_DIR }}/${infra}.yaml"

          done

      - name: Output all rendered apps
        id: findRenderedApps
        shell: bash
        run: |
          # OUTPUT ALL FILE RENDERED FILE CONTENTS
          find "${{ env.FLUX_TMP_DIR }}" -type f -name "*.yaml" -exec cat {} \;

          # GET ALL FILENAMES
          all_rendered_files=$(find ${{ env.FLUX_TMP_DIR }} -type f -name "*.yaml")

          COMMIT_STRING=""

          for file in $all_rendered_files; do

            echo ${file}

            var=$(echo "$file:${{ env.FLUX_CLUSTER_FOLDER }}/$(basename $file)")
            COMMIT_STRING="${COMMIT_STRING}${var},"

          done

          echo ${COMMIT_STRING} | rev | cut -c2- | rev

          echo INFRA_COMMIT_STRING="$(echo ${COMMIT_STRING} | rev | cut -c2- | rev)" >> $GITHUB_ENV

      - name: Create branch for flux config
        id: createBranch
        run: |
          printenv

          machineshop create \
          --kind branch \
          --branch "flux-updated-cluster-${{ inputs.lab }}-${{ inputs.cloud }}-${{ inputs.cluster-name }}" \
          --repository stuttgart-things \
          --group stuttgart-things \
          --files "${{ env.INFRA_COMMIT_STRING }}"


      # - name: Create branch for flux config
      #   id: createBranch
      #   run: |
      #     machineshop create \
      #     --kind branch \
      #     --branch ${{ env.TF_PROJECT_DIR }} \
      #     --repository stuttgart-things \
      #     --group stuttgart-things \
      #     --files "flux.tf:${{ env.TF_PROJECT_DIR }}/flux.tf,state.tf:${{ env.TF_PROJECT_DIR }}/state.tf,file-secrets.yaml:${{ env.TF_PROJECT_DIR }}/file-secrets.yaml,terraform.tfvars:${{ env.TF_PROJECT_DIR }}/terraform.tfvars" \
