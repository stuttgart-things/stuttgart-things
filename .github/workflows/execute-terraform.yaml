---
name: Execute Terraform
on:
  workflow_call:
    inputs:
      folder:
        required: true
        type: string
      branch:
        required: true
        type: string
      operation:
        required: false
        type: string
        default: apply
      variables:
        required: false
        type: string
        default: vsphere_vm_template="/LabUL/vm/stuttgart-things/vm-templates/ubuntu23-2024-04-12"
      runs-on:
        required: true
        type: string
      environment-name:
        default: k8s
        required: false
        type: string
      working-image:
        type: string
        default: eu.gcr.io/stuttgart-things/sthings-terraform:1.8.1-2
        required: false

jobs:
  execute-terraform:
    runs-on: ${{ inputs.runs-on }}
    environment: ${{ inputs.environment-name }}
    container:
      image: ${{ inputs.working-image }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_AUTH_METHOD: ${{ secrets.VAULT_AUTH_METHOD }}
      VAULT_NAMESPACE: ${{ secrets.VAULT_NAMESPACE }}
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
      TFVARS_FILE: ${{ inputs.folder }}/terraform.tfvars
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: '0'
          ref: ${{ inputs.branch }}

      - name: Render terraform.tfvars (if exists)
        run: |
          if test -f "${TFVARS_FILE}"; then

            echo "${TFVARS_FILE} exists."
            values=$(tail -1 ${TFVARS_FILE}| cut -c 3-)

            machineShop render \
            --source local \
            --template ${TFVARS_FILE} \
            --output file \
            --values "$values" \
            --destination ${TFVARS_FILE}

          fi

      - name: Add variables to terraform.tfvars
        if: "${{ inputs.variables != '' }}"
        run: |
          vars=$(echo ${{ inputs.variables }} | tr ';' '\n' | tr + = | sed 's/\(=\)\([^ >]*\)/\1"\2"/g') 
          printf "%s\n" "${vars[@]}" >> ${TFVARS_FILE}

      - name: Terraform init
        run: |
          ls -lta ${{ inputs.folder }}
          terraform --version
          terraform -chdir=${{ inputs.folder }} init
        shell: bash

      - name: Terraform plan
        run: |
          terraform -chdir=${{ inputs.folder }} plan
        shell: bash

      - name: Terraform execution
        run: |
          terraform -chdir=${{ inputs.folder }} ${{ inputs.operation }} -auto-approve
        shell: bash

  delete-terraform-config:
    if: ${{ inputs.operation == 'destroy' }}
    needs: execute-terraform
    runs-on: ${{ inputs.runs-on }}
    environment: ${{ inputs.environment-name }}
    container:
      image: ${{ inputs.working-image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: '0'
          ref: ${{ inputs.branch-name }}
          
      - name: Check folder before deletion
        run: |
          ls -lta terraform/builds
        shell: bash
        
      - name: Delete folder
        run: |
          rm -rf ${{ inputs.folder }}
        shell: bash
        
      - name: Check folder after deletion
        run: |
          ls -lta terraform/builds
        shell: bash
        
      - name: Get token for creating pull request
        uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.PULLREQUESTER_APP_ID }}
          private_key: ${{ secrets.PULLREQUESTER_APP_KEY }}
          
      - name: Create Pull Request for terraform config file deletion
        id: pr
        uses: peter-evans/create-pull-request@v6.0.2
        with:
          commit-message: '[CI][TERRAFORM] - Deleted terraform config files ${{ inputs.lab }}-${{ inputs.cloud }}-${{ inputs.vm-name }}'
          title: Deleted Terraform Config Files ${{ inputs.lab }}-${{ inputs.cloud }} ${{ inputs.vm-name }}
          delete-branch: true
          token: ${{ steps.generate-token.outputs.token }}
