---
name: K8s-SAST-Polaris
on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string
        default: self-hosted
      polaris-image:
        default: eu.gcr.io/stuttgart-things/sthings-polaris:8.5.4-3.14.0
        required: false
        type: string
      python-image:
        default: python:alpine3.19
        required: false
        type: string
      severity:
        default: danger
        required: false
        type: string
      scan-object:
        default: manifest
        required: false
        type: string
      scan-path:
        default: nginx.yaml
        required: false
        type: string
      environment-name:
        default: k8s
        required: true
        type: string

jobs:
  scan-manifest-polaris:
    runs-on: ${{ inputs.runs-on }}
    container:
      image: ${{ inputs.polaris-image }}
    environment: ${{ inputs.environment-name }}
    continue-on-error: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Polaris Audit Manifest files
        run: |
          if [[ "${{ inputs.scan-object }}" == "manifest" ]]; then
            polaris audit \
            --audit-path ${{ inputs.scan-path }} \
            --only-show-failed-tests \
            --severity ${{ inputs.severity }} \
            --output-file /tmp/polaris-results.json
          fi

          if [[ "${{ inputs.scan-object }}" == "helm" ]]; then
            polaris audit \
            --helm-chart ${{ inputs.scan-path }} \
            --only-show-failed-tests \
            --severity ${{ inputs.severity }} \
            --output-file /tmp/polaris-results.json
          fi

      - name: Upload scan results as artifacts
        uses: actions/upload-artifact@v4.3.4
        with:
          name: polaris-results
          path: /tmp/polaris-results.json

  transform-manifest-polaris:
    needs: scan-manifest-polaris
    runs-on: ${{ inputs.runs-on }}
    container:
      image: ${{ inputs.python-image }}
    environment: ${{ inputs.environment-name }}
    continue-on-error: false
    steps:
      - name: Download polaris artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: polaris-results

      - name: Install dependecies
        run: |
          pip install jinja2

      - name: Run transformation
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import subprocess
            import json
            import os
            from datetime import datetime
            from jinja2 import Environment, FileSystemLoader

            # VARIABLES
            now = datetime.now()
            upload_address = "https://artifacts.app.4sthings.tiab.ssc.sva.de"
            current_dir = os.path.dirname(os.path.realpath(__file__))

            # INPUT
            polaris_output_filepath = '/tmp/polaris2.json'
            grafana_template_filename = 'grafana-template.json'

            # OUTPUT
            scan_id = f'{now.year}-{now.month}-{now.day}-{now.minute}-{now.second}'
            data_json_outputfile = 'data-'+scan_id+'.json'
            template_json_outputfile = 'template-'+scan_id+'.json'

            print(scan_id)
