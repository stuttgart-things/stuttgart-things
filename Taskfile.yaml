---
version: 3

vars:
  REGISTRY: eu.gcr.io
  REPOSITORY_NAME: stuttgart-things
  PROJECT:
    sh: echo ${PROJECT}

tasks:

  build:
    desc: Build & push image
    cmds:
      - sudo nerdctl build -t {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ .PROJECT }}:{{ .VERSION }} ./build/{{ .PROJECT }}
      - sudo nerdctl push {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ .PROJECT }}:{{ .VERSION }}
    vars:
      VERSION:
        sh: cat ./build/{{ .PROJECT }}/Dockerfile | grep version | awk -F= '{ print $2 }'

  package:
    desc: Package & push chart
    cmds:
      - yq e -i '.version = "{{ .VERSION_NUMBER_PREFIX }}{{ .UPDATED_VERSION_NUMBER }}"' ./charts/{{ .PROJECT }}/Chart.yaml
      - "sed -i 's/appVersion: .*/appVersion: {{ .VERSION_NUMBER_PREFIX }}{{ .UPDATED_VERSION_NUMBER }}/g' ./charts/{{ .PROJECT }}/Chart.yaml"
      - cd ./charts/{{ .PROJECT }} && helm dep update
      - helm package ./charts/{{ .PROJECT }}
      - helm push {{ .PACKAGE }} oci://{{ .REGISTRY }}/{{ .REPOSITORY_NAME }}
      - rm -rf {{ .PACKAGE }}
    vars:
      PACKAGE:
        sh: "echo ${PROJECT}-*.tgz"
      CURRENT_VERSION_NUMBER:
        sh: "echo $(yq e '.version' ./charts/{{ .PROJECT }}/Chart.yaml | awk -F'[.=]' ' { print $3 }')"
      UPDATED_VERSION_NUMBER:
        sh: "echo $(({{ .CURRENT_VERSION_NUMBER }}+1))"
      VERSION_NUMBER_PREFIX:
        sh: echo $(yq e '.version' ./charts/{{ .PROJECT }}/Chart.yaml | awk -F'[.=]' ' { print $1"."$2"." }')
