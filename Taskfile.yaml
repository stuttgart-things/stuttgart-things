---
version: 3

vars:
  REGISTRY: eu.gcr.io
  REPOSITORY_NAME: stuttgart-things
  PROJECT:
    sh: echo ${PROJECT}
  CONTAINER_RUNTIME_CMD: sudo nerdctl
  DATE:
    sh: date +"%y.%m%d.%H%M"

tasks:

  build:
    desc: Build & push image
    cmds:
      - '{{ .CONTAINER_RUNTIME_CMD }} build -t {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ .PROJECT }}:{{ .VERSION }} ./images/{{ .PROJECT }}'
      - '{{ .CONTAINER_RUNTIME_CMD }} push {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ .PROJECT }}:{{ .VERSION }}'
      - task: git-push
    vars:
      VERSION:
        sh: cat ./images/{{ .PROJECT }}/Dockerfile | grep version | awk -F= '{ print $2 }'

  package:
    desc: Package & push chart
    cmds:
      - yq e -i '.version = "{{ .VERSION_NUMBER_PREFIX }}{{ .UPDATED_VERSION_NUMBER }}"' ./charts/{{ .PROJECT }}/Chart.yaml
      - "sed -i 's/appVersion: .*/appVersion: {{ .VERSION_NUMBER_PREFIX }}{{ .UPDATED_VERSION_NUMBER }}/g' ./charts/{{ .PROJECT }}/Chart.yaml"
      - cd ./charts/{{ .PROJECT }} && helm dep update
      - helm package ./charts/{{ .PROJECT }}
      - helm push {{ .PACKAGE }} oci://{{ .REGISTRY }}/{{ .REPOSITORY_NAME }}
      - rm -rf {{ .PACKAGE }}
      - task: git-push
    vars:
      PACKAGE:
        sh: "echo ${PROJECT}-*.tgz"
      CURRENT_VERSION_NUMBER:
        sh: "echo $(yq e '.version' ./charts/{{ .PROJECT }}/Chart.yaml | awk -F'[.=]' ' { print $3 }')"
      UPDATED_VERSION_NUMBER:
        sh: "echo $(({{ .CURRENT_VERSION_NUMBER }}+1))"
      VERSION_NUMBER_PREFIX:
        sh: echo $(yq e '.version' ./charts/{{ .PROJECT }}/Chart.yaml | awk -F'[.=]' ' { print $1"."$2"." }')

  git-push:
    desc: Commit & push the module
    cmds:
      - git pull
      - git config advice.addIgnoredFile false
      - git add *
      - git commit -am 'updated {{ .PROJECT }} {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}{{ .BRANCH }}'
      - git push