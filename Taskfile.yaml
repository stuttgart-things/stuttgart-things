---
version: 3
vars:
  REGISTRY: eu.gcr.io
  REPOSITORY_NAME: stuttgart-things
  PROJECT:
    sh: echo ${PROJECT}
  CONTAINER_RUNTIME_CMD: sudo nerdctl
  DATE:
    sh: date +"%y.%m%d.%H%M"
  TKN_CHARTS_PIPELINERUNS: ./charts/pipelineRuns.yaml
  TKN_IMAGES_PIPELINERUNS: ./images/pipelineRuns.yaml

tasks:

  build:
    desc: Build & push image
    cmds:
      - '{{ .CONTAINER_RUNTIME_CMD }} build -t {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ .PROJECT }}:{{ .VERSION }} ./images/{{ .PROJECT }}'
      - '{{ .CONTAINER_RUNTIME_CMD }} push {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ .PROJECT }}:{{ .VERSION }}'
      - task: build-tekton
      - task: git-push
    vars:
      VERSION:
        sh: cat ./images/{{ .PROJECT }}/Dockerfile | grep version | awk -F= '{ print $2 }'

  package-tekton:
    desc: Update tekton helm pipelineRuns
    cmds:
      - yq e -i '.runs.packageHelmChartSCR.name = "package-{{ .PROJECT }}-{{ .VERSION_NUMBER_PREFIX }}{{ .UPDATED_VERSION_NUMBER }}-{{ .DATE }}"' {{ .TKN_CHARTS_PIPELINERUNS }}
      - yq e -i '.runs.packageHelmChartSCR.params.helmChartTag = "{{ .VERSION_NUMBER_PREFIX }}{{ .UPDATED_VERSION_NUMBER }}"' {{ .TKN_CHARTS_PIPELINERUNS }}
      - yq e -i '.runs.packageHelmChartSCR.params.helmChartName = "{{ .PROJECT }}"' {{ .TKN_CHARTS_PIPELINERUNS }}
      - yq e -i '.runs.packageHelmChartSCR.params.gitWorkspaceSubdirectory = "/helm/{{ .PROJECT }}"' {{ .TKN_CHARTS_PIPELINERUNS }}
    vars:
      CURRENT_VERSION_NUMBER:
        sh: "echo $(yq e '.version' ./charts/{{ .PROJECT }}/Chart.yaml | awk -F'[.=]' ' { print $3 }')"
      UPDATED_VERSION_NUMBER:
        sh: "echo $(({{ .CURRENT_VERSION_NUMBER }}+1))"
      VERSION_NUMBER_PREFIX:
        sh: echo $(yq e '.version' ./charts/{{ .PROJECT }}/Chart.yaml | awk -F'[.=]' ' { print $1"."$2"." }')

  build-tekton:
    desc: Update tekton helm pipelineRuns
    cmds:
      - echo UPDATING BUILDAH PIPELINERUNS
      - yq e -i '.runs.buildahImage.name = "builah-{{ .PROJECT }}-{{ .VERSION }}-{{ .DATE }}"' {{ .TKN_IMAGES_PIPELINERUNS }}
      - yq e -i '.runs.buildahImage.params.context = "/buildah/{{ .PROJECT }}/images/{{ .PROJECT }}"' {{ .TKN_IMAGES_PIPELINERUNS }}
      - yq e -i '.runs.buildahImage.params.image = "scr.app.4sthings.tiab.ssc.sva.de/{{ .PROJECT }}/{{ .PROJECT }}:{{ .VERSION }}"' {{ .TKN_IMAGES_PIPELINERUNS }}
      - yq e -i '.runs.buildahImage.params.gitWorkspaceSubdirectory = "/buildah/{{ .PROJECT }}"' {{ .TKN_IMAGES_PIPELINERUNS }}
      - echo UPDATING KANIKO PIPELINERUNS
      - yq e -i '.runs.kanikoImage.name = "kaniko-{{ .PROJECT }}-{{ .VERSION }}-{{ .DATE }}"' {{ .TKN_IMAGES_PIPELINERUNS }}
      - yq e -i '.runs.kanikoImage.params.context = "/kaniko/{{ .PROJECT }}/images/{{ .PROJECT }}"' {{ .TKN_IMAGES_PIPELINERUNS }}
      - yq e -i '.runs.buildahImage.params.image = "scr.app.4sthings.tiab.ssc.sva.de/{{ .PROJECT }}/{{ .PROJECT }}"' {{ .TKN_IMAGES_PIPELINERUNS }}
      - yq e -i '.runs.kanikoImage.params.tag = "{{ .VERSION }}"' {{ .TKN_IMAGES_PIPELINERUNS }}
      - yq e -i '.runs.kanikoImage.params.gitWorkspaceSubdirectory = "/kaniko/{{ .PROJECT }}"' {{ .TKN_IMAGES_PIPELINERUNS }}
    vars:
      VERSION:
        sh: cat ./images/{{ .PROJECT }}/Dockerfile | grep version | awk -F= '{ print $2 }'

  package:
    desc: Package & push chart
    cmds:
      - yq e -i '.version = "{{ .VERSION_NUMBER_PREFIX }}{{ .UPDATED_VERSION_NUMBER }}"' ./charts/{{ .PROJECT }}/Chart.yaml
      - "sed -i 's/appVersion: .*/appVersion: {{ .VERSION_NUMBER_PREFIX }}{{ .UPDATED_VERSION_NUMBER }}/g' ./charts/{{ .PROJECT }}/Chart.yaml"
      - cd ./charts/{{ .PROJECT }} && helm dep update
      - helm package ./charts/{{ .PROJECT }}
      - helm push {{ .PACKAGE }} oci://{{ .REGISTRY }}/{{ .REPOSITORY_NAME }}
      - rm -rf {{ .PACKAGE }}
      - task: package-tekton
      - task: git-push
    vars:
      PACKAGE:
        sh: "echo ${PROJECT}-*.tgz"
      CURRENT_VERSION_NUMBER:
        sh: "echo $(yq e '.version' ./charts/{{ .PROJECT }}/Chart.yaml | awk -F'[.=]' ' { print $3 }')"
      UPDATED_VERSION_NUMBER:
        sh: "echo $(({{ .CURRENT_VERSION_NUMBER }}+1))"
      VERSION_NUMBER_PREFIX:
        sh: echo $(yq e '.version' ./charts/{{ .PROJECT }}/Chart.yaml | awk -F'[.=]' ' { print $1"."$2"." }')

  git-push:
    desc: Commit & push the module
    cmds:
      - git pull
      - git config advice.addIgnoredFile false
      - git add *
      - git commit -am 'updated {{ .PROJECT }} {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}{{ .BRANCH }}'
      - git push
