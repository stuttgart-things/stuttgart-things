---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: build-kaniko
  labels:
    app.kubernetes.io/version: "0.6"
  annotations:
    tekton.dev/categories: "Image Build"
    tekton.dev/displayName: "Build and upload container image using Kaniko"
    tekton.dev/pipelines.minVersion: "0.50.0"
    tekton.dev/platforms: "linux/amd64"
    tekton.dev/tags: "image-build"
spec:
  description: build Dockerfile w/ kaniko and push to a registry
  workspaces:
    - name: dockerconfig
      description: includes a docker `config.json`
      optional: true
      mountPath: /kaniko/.docker
    - name: source
      description: holds the context and Dockerfile
      optional: false
  params:
    - name: BUILDER_IMAGE
      description: the image on which builds will run (default is v1.5.1)
      type: string
      default: "gcr.io/kaniko-project/executor:v1.16.0"
    - name: CONTEXT
      description: the build context used by Kaniko
      type: string
      default: "./"
    - name: DOCKERFILE
      description: Path to the Dockerfile to build
      type: string
      default: "./Dockerfile"
    - name: EXTRA_ARGS
      description:
      type: array
      default: []
    - name: IMAGE
      description: name (reference) of the image to build
      type: string
      default: ""
    - name: REGISTRY
      description: registry FROM (base image)
      type: string
      default: "scr.tiab.labda.sva.de"
    - name: SUBDIRECTORY
      description: subdirectory of workspace
      type: string
      default: ""
    - name: TAG
      description: name (reference) of the image to build
      type: string
      default: ""
  results:
    - name: IMAGE_DIGEST
      description: digest of the image just built
    - name: IMAGE_URL
      description: url of the image just built.
  steps:
    - name: build-and-push
      workingDir: $(workspaces.source.path)/$(params.SUBDIRECTORY)
      args:
        - $(params.EXTRA_ARGS)
        - --dockerfile=$(params.DOCKERFILE)
        - --context=$(workspaces.source.path)/$(params.CONTEXT)
        - --destination=$(params.IMAGE):$(params.TAG)
        - --destination=$(params.IMAGE):latest
        - --build-arg=REGISTRY=$(params.REGISTRY)
        - --digest-file=$(results.IMAGE_DIGEST.path)
        - --insecure
      image: "$(params.BUILDER_IMAGE)"
      securityContext:
        privileged: false
        runAsNonRoot: false
        runAsUser: 0
    - name: write-url
      image: "docker.io/library/bash:5.2.26@sha256:4b5f0dfc184cd521d6cd01d0dc8096cdb216b1d7f0a2d23f6e7577be97997434"
      securityContext:
        privileged: false
      script: |
        set -e
        image="$(params.IMAGE)"
        echo -n "${image}" | tee "$(results.IMAGE_URL.path)"
