---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: bootstrap-flux
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/categories: "gitOps"
    tekton.dev/displayName: "use flux cli in texton task"
    tekton.dev/pipelines.minVersion: "0.50.0"
    tekton.dev/platforms: "linux/amd64"
    tekton.dev/tags: "gitops, cli"
spec:
  description: use flux cli in texton task
  workspaces:
    - name: source
      description: holds the working data
      optional: false
  params:
    - name: SUB_DIRECTORY
      description: subdirectory of workspace
      type: string
      default: ""
    - name: WORKING_IMAGE
      description: the image on which ansible will run
      type: string
      default: "eu.gcr.io/stuttgart-things/sthings-packer:1.9.4-8.3.0-4"
    - name: vault-secret-key-addr
      description: vaul addr key in the secret
      type: string
      default: "VAULT_ADDR"
    - name: vault-secret-key-approleId
      description: approle id key in the secret
      type: string
      default: "VAULT_ROLE_ID"
    - name: vault-secret-key-approleSecret
      description: approle secret key in the secret
      type: string
      default: "VAULT_SECRET_ID"
    - name: vault-secret-key-namespace
      description: namespace key in the secret
      type: string
      default: "VAULT_NAMESPACE"
    - name: vaultSecretName
      description: name of the secret with incoming webhook URL
      type: string
      default: "vault"
  results:
    - name: kubeconfig
      description: kubeconfig string
  steps:
    - name: get-secrets
      workingDir: $(workspaces.source.path)/$(params.SUB_DIRECTORY)
      image: "$(params.WORKING_IMAGE)"
      env:
        - name: ANSIBLE_HOST_KEY_CHECKING
          value: "False"
        - name: VAULT_ADDR
          valueFrom:
            secretKeyRef:
              key: $(params.vault-secret-key-addr)
              name: $(params.vaultSecretName)
        - name: VAULT_NAMESPACE
          valueFrom:
            secretKeyRef:
              key: $(params.vault-secret-key-namespace)
              name: $(params.vaultSecretName)
        - name: VAULT_ROLE_ID
          valueFrom:
            secretKeyRef:
              key: $(params.vault-secret-key-approleId)
              name: $(params.vaultSecretName)
        - name: VAULT_SECRET_ID
          valueFrom:
            secretKeyRef:
              key: $(params.vault-secret-key-approleSecret)
              name: $(params.vaultSecretName)
      securityContext:
        privileged: false
        runAsNonRoot: true
        runAsUser: 65532
      script: |-
        #!/usr/bin/env bash
        set -eu

        echo "USE FLUX CLI" | tee $(results.kubeconfig.path)
    - name: boostrap-flux
      workingDir: $(workspaces.source.path)/$(params.SUB_DIRECTORY)
      image: "$(params.WORKING_IMAGE)"
      securityContext:
        privileged: false
        runAsNonRoot: true
        runAsUser: 65532
      script: |-
        #!/usr/bin/env bash

        echo
