---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: watch-tekton
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: github
    tekton.dev/tags: github
    tekton.dev/displayName: "github cli"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    Use tkn for watching pipelineRuns
  params:
    - name: SLEEP
      description: sleep inbetween status checks
      default: "5"
    - name: RETRIES
      description: total retrys
      default: "250"
    - name: PR_FILTER
      description: filter term for pipelineRuns
    - name: PR_NAMESPACE
      description: pipelineRun namespace
    - name: TKN_WORKING_IMAGE
      description: image/version to use
      default: "eu.gcr.io/stuttgart-things/sthings-k8s:1.28.2"
  stepTemplate:
    securityContext:
      privileged: false
      runAsNonRoot: true
      runAsUser: 65532
  steps:
    - name: watch
      image: $(params.TKN_WORKING_IMAGE)
      script: |
        #!/usr/bin/env sh
        set -eu

        sleep=$(params.SLEEP)
        failed_prs=0
        succeeded_prs=0
        retries=0
        retries_left=$(params.RETRIES)
        max_retries=$(params.RETRIES)

        all_prs=$(tkn pr list -n $(params.PR_NAMESPACE) | grep -c '$(params.PR_FILTER)')
        echo all pipelineRuns: ${all_prs}

        while [[ ${failed_prs} -le 0  ]] || [[ ${succeeded_prs} -eq ${all_prs} ]] || [[ ${retries} -eq ${max_retries} ]]
        do
          echo ${retries_left} retries left

          tkn pr list -n $(params.PR_NAMESPACE) | grep '$(params.PR_FILTER)' | grep Failed
          failed_prs=$(tkn pr list -n $(params.PR_NAMESPACE) | grep '$(params.PR_FILTER)' | grep -c Failed)
          echo Failed pipelineRuns: ${failed_prs}

          tkn pr list -n $(params.PR_NAMESPACE) | grep '$(params.PR_FILTER)' | grep Succeeded
          succeeded_prs=$(tkn pr list -n $(params.PR_NAMESPACE) | grep '$(params.PR_FILTER)' | grep -c Succeeded)
          echo Succeeded pipelineRuns: ${succeeded_prs}

          retries=`expr ${retries} + 1`
          retries_left=`expr ${max_retries} - ${retries}`
          echo check/retry in ${sleep} seconds..
          sleep ${sleep}
        done

        echo "Done watching pipelineRuns!"
        echo Failed pipelineRuns: ${failed_prs}
        echo Succeeded pipelineRuns: ${succeeded_prs}
