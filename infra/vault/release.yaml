---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vault-deployment
  namespace: ${VAULT_NAMESPACE:=vault}
spec:
  interval: 30m
  dependsOn:
    - name: vault-certificate-configuration
      namespace: ${VAULT_NAMESPACE:=vault}
  chart:
    spec:
      chart: vault
      version: ${VAULT_VERSION:=1.4.18}
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: ${VAULT_NAMESPACE:=vault}
      interval: 12h
  values:
    global:
      storageClass: ${VAULT_STORAGE_CLASS}
    injector:
      enabled: ${VAULT_INJECTOR_ENABLED:=false}
    server:
      enabled: ${VAULT_SERVER_ENABLED:=true}
    config: |
      disable_mlock = true
      ui = true
      listener "tcp" {
        tls_disable = 1
        address = "[::]:{{ .Values.server.containerPorts.http }}"
        cluster_address = "[::]:{{ .Values.server.containerPorts.internal }}"
        {{- if .Values.server.metrics.enabled }}
        # Enable unauthenticated metrics access (necessary for Prometheus Operator)
        telemetry {
          unauthenticated_metrics_access = "true"
        }
        {{- end }}
      }
      storage "file" {
        path = "{{ .Values.server.persistence.mountPath }}"
      }

      service_registration "kubernetes" {}


      # dataStorage:
      #   enabled: ${VAULT_STORAGE_ENABLED:=true}
      #   storageClass: ${VAULT_STORAGE_CLASS}
      #   size: ${VAULT_STORAGE_SIZE}
      ingress:
        enabled: ${VAULT_INGRESS_ENABLED:=true}
        hostname: ${VAULT_INGRESS_HOSTNAME}.${VAULT_INGRESS_DOMAIN}
        tls: true
          # - hosts:
          #     - ${VAULT_INGRESS_HOSTNAME}.${VAULT_INGRESS_DOMAIN}
            # secretName: ${VAULT_INGRESS_HOSTNAME}-ingress-tls
        ingressClassName: ${VAULT_INGRESS_CLASS:=nginx}
    csi:
      enabled: ${VAULT_CSI_ENABLED:=true}
