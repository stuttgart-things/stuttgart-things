---
# defaultNamespace: tekton
enableWorkspaces: true
enableGitSecretsSSH: true
enableSecrets: true
enableRegistryCredentials: true
enablePipelines: true
enableTasks: true
enableRuns: true

pipelines:
  package-publish-helmchart:
    namespace: {{ .Release.Namespace }}
    workspaces:
      - source
      - sshCredentials
      - dockerconfig
    params:
      gitRepoUrl:
        description: source git repo
      gitRevision:
        description: revision of source git repo
      gitWorkspaceSubdirectory:
        description: subdirectory on workspace
        default: ""
      helmChartPath:
        description: directory to helm chart in repo, e.g. "helm"
      helmChartName:
        description: name of helm chart, e.g. "sthings-k8s-operator"
      helmChartTag:
        description: tag of helm chart, e.g. "0.1.0"
      registry:
        description: registry url, e.g. "scr.tiab.labda.sva.de"
      workingImage:
        description: working image
    tasks:
      fetch-repository:
        task: git-clone
        workspaces:
          output:
            workspace: source
          ssh-directory:
            workspace: sshCredentials
        params:
          url:
            value: $(params.gitRepoUrl)
          revision:
            value: $(params.gitRevision)
          subdirectory:
            value: $(params.gitWorkspaceSubdirectory)
          deleteExisting:
            value: "'true'"
      build-package-helmchart:
        task: create-publish-helm-chart
        runAfter:
          - fetch-repository
        workspaces:
          source:
            workspace: source
          dockerconfig:
            workspace: dockerconfig
        params:
          PATH:
            value: $(params.helmChartPath)
          CHARTNAME:
            value: $(params.helmChartName)
          CHARTTAG:
            value: $(params.helmChartTag)
          REGISTRY:
            value: $(params.registry)
          IMAGE:
            value: $(params.workingImage)
          SUBDIRECTORY:
            value: $(params.gitWorkspaceSubdirectory)
      send-webhook-msteams:
        task: send-msteams-notification
        runAfter:
          - build-package-helmchart
        params:
          message:
            value: "helm chart $(params.helmChartName):$(params.helmChartTag) packaged & pushed successfully to oci://$(params.registry)/$(params.helmChartName)/"
          webhook-url-secret:
            value: msteams
          webhook-url-secret-key:
            value: url
