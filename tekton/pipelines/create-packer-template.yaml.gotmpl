---
enableWorkspaces: true
enableGitSecretsSSH: true
enableSecrets: true
enableRegistryCredentials: true
enablePipelines: false
enableTasks: true
enableRuns: true

pipelines:
  create-packer-template:
    namespace: {{ .Release.Namespace }}
    workspaces:
      - shared-workspace
      - sshCredentials
    params:
      gitRepoUrl:
        description: source git repo
      gitWorkspaceSubdirectory:
        description: subdirectory on workspace
      gitRevision:
        description: revision of source git repo
        default: "main"
      packerWorkingImage:
        description: the image on which ansible will run
        default: "eu.gcr.io/stuttgart-things/sthings-packer:1.9.4-8.3.0-1"
      osVersion:
        description: to be build os version
      osTemplatePath:
        description: path to os template
      defaultEnvironmentPath:
        description: path to default environment
      bootConfigPath:
        description: path to kickstart file
      vaultSecretName:
        description: name of vault secret
    tasks:
      fetch-repository:
        task: git-clone
        workspaces:
          output:
            workspace: shared-workspace
          ssh-directory:
            workspace: sshCredentials
        params:
          url:
            value: $(params.gitRepoUrl)
          subdirectory:
            value: $(params.gitWorkspaceSubdirectory)
          deleteExisting:
            value: "'true'"
          revision:
            value: $(params.gitRevision)
      execute-packer:
        task: build-packer-template
        runAfter:
          - fetch-repository
        workspaces:
          source:
            workspace: shared-workspace
        params:
          SUB_DIRECTORY:
            value: $(params.gitWorkspaceSubdirectory)
          WORKING_IMAGE:
            value: $(params.packerWorkingImage)
          OS_VERSION:
            value: $(params.osVersion)
          OS_TEMPLATE_PATH:
            value: $(params.osTemplatePath)
          DEFAULT_ENVIRONMENT_PATH:
            value: $(params.defaultEnvironmentPath)
          BOOT_CONFIG_PATH:
            value: $(params.bootConfigPath)
          vaultSecretName:
            value: $(params.vaultSecretName)
